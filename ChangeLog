2004-07-29  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
	  src/NetworkManagerDbus.c
		- Update to current DBus (ie don't use decomposed paths when registering
			object paths/fallbacks)

2004-07-27  Dan Williams <dcbw@redhat.com>

	* Remove various Makefile.in files

	* TODO
		- Add some more items

	* configure.in
		- Add checks for OpenSSL/md5 headers and libs

	* src/Makefile.am
		- Use OpenSSL CFLAGS

	* src/NetworkManagerAP.[ch]
		- Remove 'stamp' functions, replace with 'invalid' functions
			to support user cancelling WEP key entry

	* src/NetworkManagerDbus.c
		- Remove 'stamp' return functions
		- Treat returned user key as a passphrase and convert to a WEP key,
			but don't actually use the WEP key yet.  We use the returned user
			key as a hexadecimal WEP key until we can figure out a UI for
			passphrase-vs-hex key

	* src/NetworkManagerWireless.[ch]
		- Add passphrase-to-128bit-key function

2004-07-27  Dan Williams <dcbw@redhat.com>

	* TODO
		- Add a couple of items

2004-07-27  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c
		- Update allowed network's GConf key when user enters a WEP key explicitly

	* info-daemon/NetworkManagerDbus.c
		- Fix some comments
		- nmi_dbus_get_allowed_networks(): kill warning

2004-07-27  Dan Williams <dcbw@redhat.com>

	* initscript/Makefile.in
		- Remove

	* initscript/Makefile.am
		- Add correct rules to install the init.d initscript

	* info-daemon/NetworkManagerInfoDbus.c
		- Remove debug fprintf

	* src/NetworkManagerDbus.[ch]
		- Remove debug fprintfs
		- Add macros for NetworkManagerInfo object path/namespace
		- Use said macros instead of constant strings

2004-07-27  Dan Williams <dcbw@redhat.com>

	* initscript/.cvsignore
		- Add

	* info-daemon/Makefile.am
		- Install .glade files and keyring.png
		- Fix stupid omission of a \ that caused half the flags not to be
			passed to gcc

	* info-daemon/NetworkManagerInfo.c
		- gtk_signal_connect->g_signal_connect
		- Alert NetworkManagerInfo to new glade file location

2004-07-27  Dan Williams <dcbw@redhat.com>

	* test/nmclienttest.c
	  test/nminfotest.c
		- Add missing <dbus/dbus.h> headers
		- Add GPL message at top

2004-07-27  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAPList.[ch]
	  src/Makefile.am
		- Add.  Deal with allowed network list additions, deletions, and updates

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Add missing <dbus/dbus.h> header

	* info-daemon/NetworkManagerInfo.[ch]
		- Add missing <dbus/dbus.h> header
		- Implement the GConf notify callback to signal NetworkManager of an allowed
			network change
		- Better error checking

	* info-daemon/NetworkManagerInfoDbus.[ch]
		- Add missing <dbus/dbus.h> header
		- Convert to using dbus_message_append_args/dbus_message_get_args
		- Implement nmi_dbus_signal_update_allowed_network() to signal NetworkManager
			that an allowed network changed.  We don't want to signal on individual
			keys _inside_ an allowed network really, just want NM to query the info
			daemon for updated info on all keys.
		- Better error checking

	* src/NetworkManager.[ch]
		- Add missing <dbus/dbus.h> header
		- Move allowed_ap_list free functions to NetworkManagerAPList.[ch]
		- Zero out NMData structure on free
		- No longer use a thread for allowed_ap_list updating, instead its now done
			through dbus queries against NetworkManagerInfo
		- Populate allowed_ap_list initially before adding existing network devices
			to the device list, so wireless devices can get their "best" AP

	* src/NetworkManagerDbus.[ch]
		- Convert to using dbus_message_append_args/dbus_message_get_args
		- Better error checking
		- Implement Allowed Network info functions to request allowed network
			info from NetworkManagerInfo
		- Implement the filter function to process signals from NetworkManagerInfo
			about changing allowed networks

	* src/NetworkManagerDevice.c
		- Fix file descriptor leak in nm_device_update_ip4_address()

2004-07-27  Dan Williams <dcbw@redhat.com>

	* .cvsignore
	  src/.cvsignore
	  test/.cvsignore
	  dispatcher-daemon/.cvsignore
	  info-daemon/.cvsignore
		- Add .cvsignore files to reduce noise when diffing

2004-07-24  Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.[ch]
	  src/NetworkManagerDbus.[ch]
	  src/NetworkManagerDevice.[ch]
	  src/NetworkManagerPolicy.c
	  src/NetworkManagerWireless.[ch]
		- Add many more g_return_if_fail()/g_return_val_if_fail() checks
		- Pass the NMData application data structure through all calls
			that need it so we can get rid of nm_get_global_data()
		- Change deallocation of the allowed_ap_list GSList in preparation
			for not completely clearing it every time we get an update,
			but instead getting incremental updates via GConf/dbus

2004-07-22  Dan Williams <dcbw@redhat.com>

	* configure.in
		- Add checks for GConf libs & headers & flags

	* info-daemon/Makefile.am
		- Add GConf flags & libs to compile/link stages of NetworkManagerInfo

	* info-daemon/NetworkManagerInfo.[ch]
		- Don't use gquarks for data storage, just use normal data storage
		- Add gconf bits to watch /system/networking/wireless/allowed_networks

	* info-daemon/NetworkManagerDbus.[ch]
		- Add method call for getting allowed networks
		- Add method calls for getting an allowed network's essid, priority, and key
		- Hook the method calls up to GConf
		- Split user key dialog code into separate function (nmi_dbus_get_key_for_network)
		- nmi_dbus_nmi_message_handler(): make sure to unref the reply message after sending
		
	* src/NetworkManagerDbus.[ch]
		- Switch for enumeration of networks to using essid instead

	* test/Makefile.am
	  test/nminfotest.c
	  	- Add test program for NetworkManagerInfo

2004-07-19  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDbus.c
		- Switch from indexed device paths to names.  Less code, more efficient.
			ie "/org/freedesktop/NetworkManager/0" -> "/org/freedesktop/NetworkManager/eth0"

2004-07-19  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- (nm_dbus_filter): Remove obsolete response to NeedKeyForNetwork signal

2004-07-19  Dan Williams <dcbw@redhat.com>

	* Makefile.am
		- Add info-daemon directory

	* configure.in
		- Check for glade libs and headers
		- Add info-daemon directory

	* src/NetworkManagerAP.c
		- nm_ap_new_from_ap(): Fix bug that resulted in an APs encryption status not getting
			copied over to the new AP.

	* src/NetworkManagerDbus.c
	  src/NetworkManagerDbus.h
		- Deal with nm_device_ap_list_get_ap()->nm_device_ap_list_get_ap_by_index() change
		- Remove nm_dbus_signal_need_key_for_network()
		- Add disabled code for asynchronous user wep key callbacks
		- Add functions for getting, setting, and cancelling user key operations
		- Remove "setKeyForNetwork" device dbus method call, its on NetworkManager object instead
		- Add "setKeyForNetwork" dbus method call on NetworkManager object

	* src/NetworkManagerDevice.c
	  src/NetworkManagerDevice.h
		- nm_device_update_link_active(): revert changes for wireless link detection, the WEP-key-is-wrong
			logic is in device activation now
		- nm_device_activate(): for wireless devices, if we can't associate with access point (perhaps
			key is wrong) trigger get-user-key pending action
		- Implement get-user-key pending action stuff, tie to dbus messages
		- Rename nm_device_ap_list_get_ap() -> nm_device_ap_list_get_ap_by_index()
		- Add nm_device_ap_list_get_ap_by_essid()
		- Instead of copying "best" access points, ref them instead so that the key we set
			sticks around

	* src/NetworkManagerPolicy.c
		- Deal with wrong WEP key, but right access point (and if so, return link_active = TRUE)
		- Don't cancel pending actions on a device if its the same device as last iteration
		- Only promote pending_device->active_device if activation was successfull

	* src/Makefile.am
		- Rename nmclienttest->nmtest

	* info-daemon/Makefile.am
	  info-daemon/NetworkManagerInfo.c
	  info-daemon/NetworkManagerInfo.h
	  info-daemon/NetworkManagerInfoDbus.c
	  info-daemon/NetworkManagerInfoDbus.h
	  info-daemon/passphrase.glade
	  info-daemon/NetworkManagerInfo.conf
	  info-daemon/keyring.png
	  	- Import sources for info-daemon, which pops up dialog for passphrase/key when
	  		NetworkManager asks for it, and also will (soon) provide "allowed" access point
	  		lists to NetworkManager by proxying user's GConf
	  

2004-07-15  Dan Williams <dcbw@redhat.com>

	* src/Makefile.am
		- Turn on warnings

	* src/NetworkManager.c
		- nm_create_device_and_add_to_list(): call nm_device_deactivate() rather
			that doing the deactivation ourselves
		- Cancel an pending actions on a device if its being removed
		- Break up link state checking a bit, make non-active wireless cards
			deactivated to save power
		- Remove unused variables

	* src/NetworkManager.h
		- Add support for "pending" device

	* src/NetworkManagerAP.h
	  src/NetworkManagerAP.c
		- Add support for determining whether and AP has encryption enabled or not
		- AP address is now "struct ether_addr" rather than a string

	* src/NetworkManagerDbus.h
	  src/NetworkManagerDbus.c
		- Add signal NeedKeyForNetwork, method SetKeyForNetwork (testing only)
		- Changes for AP address from struct ether_addr->string

	* src/NetworkManagerDevice.h
	  src/NetworkManagerDevice.c
		- Remove unused variables, fix warnings
		- Add support for Pending Actions (things that block a device from being "active"
			until they are completed).
		- First pending action:  Get a WEP key from the user
		- Add nm_device_is_wire[d|less](), rename nm_device_is_wireless()
		- Clean up explicit testing of dev->iface_type to use nm_device_is_wireless()
		- Update wireless link checking to try to determine if the AP we are associated
			with is correct, but the WEP key we are using is just wrong.  If its wrong,
			trigger the GetUserKey pending action on the device
		- If dhclient can't get an IP address, it brings the device down.  Bring it back
			up in that case, otherwise we can't scan or link-check on it
		- Add IP address change notifications at appropriate points (still needs some work)
		- Add nm_device_need_ap_switch(), checks whether we need to switch access points or not

	* src/NetworkManagerPolicy.h
	  src/NetworkManagerPolicy.c
		- Split out "best" access point determiniation into separate function
		- Make device activation 2-stage:  first the device is pending, then
			in the next iteration through it becomes "active" unless it has
			pending actions

	* src/NetworkManagerUtils.h
	  src/NetworkManagerUtils.c
		- Clean up unused variables and warnings
		- Wrap our debug macros in {} to prevent possible confusion

	* src/NetworkManagerWireless.c
		- Forgot to return current best priority, which lead to last available AP always
			being chosen no matter what its priority was.  Corrected.

2004-07-15  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/Makefile.am
		- Turn on warnings

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Remove unused variables due to warnings
		- Fix some comments
		- Print message on receipt of NeedKeyForNetwork signal (testing only)

2004-07-06  Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
		- Add IPv4 address update for active device during link state check
		- Don't allow wireless cards to be powered up when they are not the
			active device

	* src/NetworkManagerDbus.c
	  src/NetworkManagerDbus.h
		- Add DBUS IPv4 address change signal
		- Add DBUS IPv4 address get method for devices

	* src/NetworkManagerDevice.c
		- Make setting the WEP key actually work
		- Move IP address get/set/update stuff here, per-device
		- Power down/bring down wireless device when deactivated
		- For scanning wireless devices, if first scan returned ENODATA, try again

	* src/NetworkManagerPolicy.c
		- Only set the WEP key for an allowed access point if there is one.
			We were setting it to be blank if one wasn't specified.

	* src/NetworkManagerUtils.h
	  src/NetworkManagerUtils.c
		- Move the IP address stuff to NetworkManagerDevice.c

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Add device IPv4 address change notification stuff

2004-07-05  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- A bit more descriptive state message
		- Don't segfault when reading directory

	* src/NetworkManager.h
		- Remove NMData desired_ap member, its now
			per-device rather than global

	* src/NetworkManager.c
		- Remove references to desired_ap
		- Move the allowed AP list refresh stuff into a thread

	* src/NetworkManagerDevice.c
	  src/NetworkManagerDevice.h
		- Each wireless device now has a "best ap"
		- Make device activate/deactivate functions per-device
		- Make wireless scanning per-device
		- Add IPv4 address discover functions, stub IPv6 ones
		- Move ethernet address validation functions to NetworkManagerUtils.c
		- Add wireless access point accessor function
		- Get/Set functions for "best ap"

	* src/NetworkManagerPolicy.c
		- Move activate/deactivate stuff into NetworkManagerDevice.c, per-device
		- Deal with per-device "best ap" rather than data->desired_apa
		- Implement allowed access point worker thread
		- Add nm_policy_essid_is_allowed() function

	* src/NetworkManagerUtils.c
	  src/NetworkManagerUtils.h
	  	- Add nm_ethernet_address_is_valid() function
		- Add IPv4/IPv6 address get functions

	* src/NetworkManagerWireless.c
	  src/NetworkManagerWireless.h
		- Move scanning stuff into NetworkManagerDevice.c, per-device

2004-06-29  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Implement script callout functionality

2004-06-24  Dan Williams <dcbw@redhat.com>

	* NetworkManager.c
	    - Spacing cleanups
	    - Flush device routes and ip addresses when added to the device list

	* NetworkManagerDbus.c
	    - Spacing cleanups
	    - Add missing returns in the two signal functions
	
	* NetworkManagerPolicy.c
	    - Spacing and variable cleanups

2004-06-24  Dan Williams <dcbw@redhat.com>

	* Makefile.am
	  Makefile.in
	  configure.in
	  dispatcher-daemon/Makefile.am
	  dispatcher-daemon/Makefile.in
	  dispatcher-daemon/NetworkManagerDispatcher.c
	    - Add a daemon that receives signals from NetworkManager
			and will (eventually) call scripts in /etc/somewhere
			when devices go up or down.
	
	* NetworkManager.c
	    - Spacing cleanups
	    - Flush device routes and ip addresses when added to the device list

	* NetworkManagerDbus.c
	    - Spacing cleanups
	    - Add missing returns in the two signal functions
	
	* NetworkManagerPolicy.c
	    - Spacing and variable cleanups
	    - Rename nm_policy_switch_interface->nm_policy_switch_device
	    - nm_policy_switch_device():
				Use kill (pid) instead of system ("kill <pid>")
	    - nm_state_modification_monitor():
				Add wireless essid to output of debug statements
				Correct typo in device compare to switch or not (should be !=)
				Don't sleep after sending "no longer active" signal, was useless

2004-06-24  Dan Williams <dcbw@redhat.com>

	* Initial import
