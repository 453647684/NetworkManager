2004-11-10 Dan Williams <dcbw@redhat.com>

	Patches from j bootlab org
	* src/NetworkManagerDevice.c
		- (nm_device_activate_wireless): wait 5 seconds before attempting to detect
			whether the card has a link or not, some cards are slow
		- (nm_device_activation_configure_ip): make ipv6 work a bit better

	* info-daemon/NetworkManagerInfoPassphraseDialog.c
		- Disable the "Login" button on the passphrase dialog until the user
			enters a valid passphrase or key

	Patches from Tom Parker <palfrey tevp net>
	* src/backends/NetworkManagerDebian.c
		- Add static IP support to the debian backend

	* src/backends/interface_parser.[ch]
		- Parse debian interface config files

2004-11-08 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- Some random fprintf->syslog conversions
		- (nm_device_wireless_network_exists): double-check for network
		- (nm_device_find_and_use_essid): Copy over encryption key no matter what

	* src/NetworkManagerWireless.[ch]
		- (nm_wireless_[128|64]bit_ascii_to_hex): make "ascii" argument unsigned again
			so that the binary->ascii conversion works (if unsigned, the bitshift
			will fill with zeros, which is what's required).  Also mask bitshift
			result with 0xF for futher assurance.

2004-11-06 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerUtils.c
		- (nm_get_wireless_driver_support_level): default to
			FULLY_SUPPORTED rather than UNSUPPORTED, forgot to
			flip this when changing from whitelist->blacklist of
			wireless drivers

2004-11-05 Dan Williams <dcbw@redhat.com>

	Patch from Robert Paskowitz:
	* src/backends/NetworkManagerGentoo.c
		- Update static IP config code

2004-11-05 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
	  src/NetworkManagerDbus.[ch]
	  src/NetworkManagerDevice.c
		- Keep track of the # of attempts to get the WEP key
			from the user and pass that along to the info daemon

2004-11-05 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerUtils.c
		- Blacklist wireless cards rather than whitelisting them.
		- Grab driver name from HAL rather than trying to find it
			ourselves.

2004-11-03 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletOtherNetworkDialog.c,
		- Disable OK button until valid data is entered
			for encryption stuff too

	* panel-applet/NMWirelessApplet.c
		- Report card strength for current AP if the card
			doesn't report strength data for scanned access
			points

	* src/NetworkManagerDevice.c
		- Smooth out cards reported quality, Atmel card was
			intermittently reporting no quality data but soon
			recovers

	* src/NetworkManagerWireless.c
		- Better quality data percentage calculation.  Atmel
			cards (mine at least) seem to report the quality
			in percentage format already, so honor that

	Patch from <j@bootlab.org>
	* NetworkManager.h
	  info-daemon/NetworkManagerInfoPassphraseDialog.c
	  info-daemon/passphrase.glade
	  panel-applet/NMWirelessAppletOtherNetworkDialog.c
	  panel-applet/essid.glade
	  src/NetworkManagerAP.c
	  src/NetworkManagerDevice.c
	  src/NetworkManagerWireless.[ch]
		- Support ASCII WEP keys, in both 40/64 bit and 104/128 bit

2004-11-03 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.[ch]
		- (nm_device_set_enc_key): Add parameter to set Authentication
			Mode (Open System, Shared Key, or None).  We're still using
			Shared Key for now though.

2004-11-02  Bryan Clark  <clarkbw@cvs.gnome.org>

	* panel-applet/menu-info.c: change from bold text to light
	colored, may cause problems with some themes, i've tested a lot
	and they seem fine. 

	* panel-applet/NMWirelessApplet.c: fix strength tooltip

2004-11-01  Colin Walters  <walters@verbum.org>

	* src/NetworkManagerWireless.h, src/NetworkManagerWireless.c
	(nm_wireless_128bit_key_from_passphrase): Add const.

	* src/NetworkManagerAP.h, src/NetworkManagerAP.c
	(nm_ap_set_enc_key_source): Add const.
	
2004-11-01  Colin Walters  <walters@verbum.org>

	* .cvsignore: Update.

2004-10-29 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- (nm_device_wireless_network_exists): Actually use the encryption
			key we got from the applet when attempting to find a wireless network
		- Don't bring devices down so much since on some cards it triggers
			firmware hotplugs each time

	* src/NetworkManagerDbus.c
		- (nm_dbus_nm_set_active_device): free the passphrase we may have gotten
			from the caller

2004-10-29 Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
		- (nm_hal_device_property_modified): unlock a locked active
			wireless device when a wired connection gets a link.
			(Means you'll switch to wired whenever you plug in no
			matter what).

2004-10-29 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletOtherNetworksDialog.[ch]
		- New files, implement the "Other wireless network" dialog

	* panel-applet/NMWirelessApplet.c
		- Move "other wireless network" dialog to separate file

	* panel-applet/NMWirelessAppletDbus.[ch]
		- Take key and key_type paramaters for the set_device function

	* panel-applet/essid.glade
		- Add UI bits for encryption settings

	* src/NetworkManagerDbus.c
		- Retrieve key and key_type params for "setActiveDevice" method call
			and pass them on
		- unref AP returned from nm_device_get_best_ap() when needed

	* src/NetworkManagerDevice.c
		- (nm_device_get_best_ap): ref the ap before returning it
		- unref AP returned from nm_device_get_best_ap() when needed
		- (nm_device_activate_wireless): add "ap" parameter so we don't
			need to call nm_device_get_best_ap() here, it was pretty much
			redundant anyway
		- (AP_NEED_KEY): break second link check condition out into separate
			function, and fix segfault when ap->enc_key_source was NULL
		- (nm_device_find_and_use_essid): take key and key_type parameters and
			pass them along to nm_device_wireless_network_exists().  If the
			network does exist, set the passed-in key+key_type on the AP

	* src/NetworkManagerPolicy.c
		- unref AP returned from nm_device_get_best_ap() when needed

2004-10-28 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerUtils.c
		- (nm_spawn_process): Fix a potential dereference of NULL

	Patches from Peter Jones:

	* src/NetworkManagerDevice.c
		- (nm_device_test_wireless_extensions): Better check for
			wireless devices

	* src/NetworkManagerUtils.c
		- (nm_spawn_process): Pass in valid stdout and stderr so
			executed programs don't randomly SIGPIPE and fail
		- (nm_get_wired_driver_support_level): quash hal warning
			when checking for USB ethernet device

2004-10-27 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c
	  info-daemon/NetworkManagerInfoDbus.c
	  info-daemon/NetworkManagerInfoPassphraseDialog.c
	  panel-applet/NMWirelessApplet.c
		- Properly escape gconf keys

	* src/NetworkManager.c
		- remove unused variables

	* src/NetworkManagerAP.c
		- (nm_ap_new_from_ap): Don't redundantly set new APs
			refcount since it got set in nm_ap_new()

	* src/NetworkManagerAPList.c
		- (nm_ap_list_combine): Give up ownership of newly created
			access points to the ap list, fixes memleak

	* src/NetworkManagerDevice.c
		- Remove cached_ap_list4 member since its not really needed
		- (nm_device_wireless_network_exists): Try to get correct
			encryption status of a found AP if its already in our
			device list
		- (nm_device_do_normal_scan): Clean up scanning a bit, make
			memory allocs/deallocs a bit clearer and shorter-lived

2004-10-26 Ray Strode <rstrode@redhat.com>

	* panel-applet/NMWirelessApplet.c:
	  (custom_essid_item_selected):  kill some compiler
	warnings 

2004-10-26 John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
		- (nmi_dbus_is_running): New function for determining if nmi is already running
		- (nmi_dbus_service_init): exit if another instance of nmi is already running

2004-10-23 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
		- Trap the "DeviceActivationFailed" signal

	* docs/NetworkManager DBUS API.txt
		- Add "DeviceActivationFailed" signal

	* panel-applet/NMWirelessAppletDbus.c
		- Quash the "NetworkManager service not available" message

	* src/NetworkManagerDbus.[ch]
		- Add the "DeviceActivationFailed" signal

	* src/NetworkManagerDevice.c
		- Add support for activation_failed flag
		- Fix deadlock where activation thread didn't clean itself up, making
			main thread still believe it was alive forever (didn't reset activation
			flags like activating, just_activated, etc when IP configuration
			failed)

	* src/NetworkManagerPolicy.c
		- Implement logic for DeviceActivationFailed signal, and when activation fails
			for wireless networks, try to fall back to some other access point

2004-10-23 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.[ch]
		- Place the GtkMenuBar inside a GtkEventBox, and add the Event Box
			to the applet object, so we can get tooltips
		- Add tooltips (RH #136866)

	* src/NetworkManagerDevice.c
		- When trying to find a wireless network, try to connect with encryption
			turned on first, so that we can more accurately detect whether or not
			we need to use encryption for the actual association later on

2004-10-21 Dan Williams <dcbw@redhat.com>

	* Add some support for telling NetworkManagerInfo to tell the user
		that they are using a device that's not fully supported

	* Fix some assertions in debug messages due to null access point args

2004-10-21 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- Don't try to activate/bring up/down unsupported
			devices

	* src/NetworkManagerUtils.c
		- Fix case of PCI ID checks for driver support levels

2004-10-21 Dan Williams <dcbw@redhat.com>

	* NetworkManager.h
		- New file, now contains commonly used structures and bits
			for the dbus API of NetworkManager

	* Makefile.am
		- Deliver NetworkManager.h to ${includedir}/NetworkManager

	* src/NetworkManager.h
		- Rename -> src/NetworkManagerMain.c

	* Various fixups all around to use NetworkManager.h and new
		src/NetworkManagerMain.h, remove redundant bits that got
		moved into NetworkManager.h

	* src/NetworkManagerDevice.[ch]
	  src/NetworkManagerUtils.[ch]
	  src/NetworkManagerPolicy.c
	  src/NetworkManagerDbus.c
		- Whitelist wireless drivers, and blacklist some wired
			drivers.  Also blacklist cipsec and ethernet-over-usb
			devices at this time (RH #135722, RH #135648)
		- Don't leak unsupported devices out over dbus, or allow
			them to be set as the active device.  Skip over them
			during automatic device picking

	* test/nmclienttest.c
		- Clean up the dbus code a lot

Tue Oct 19 14:20:29 2004  Jonathan Blandford  <jrb@redhat.com>

	* configure.in: post release bump.

Tue Oct 19 14:19:24 2004  Jonathan Blandford  <jrb@redhat.com>

	* configure.in:
	* NEWS: Released NetworkManager-0.3.1

2004-10-18 Dan Williams <dcbw@redhat.com>

	Patches from Thom May:
	* test/nmtestdevices.c
		- Include <string.h>
	* src/backends/NetworkManagerDebian.c:
		- (nm_system_device_run_dhcp, nm_system_device_stop_dhcp)
			(nm_system_device_flush_routes, nm_system_device_flush_addresses)
			Move to using g_strdup_printf rather than arbitrary buffers
		- (nm_system_device_setup_static_ip4_config) Implement function.
		- (nm_system_kill_all_dhcp_daemons) Use killall -q rather than killall

2004-10-17 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
		- Display name of network in the "network not found" dialog

	* panel-applet/NMWirelessAppletDbus.c
		- (nmwa_dbus_call_nm_method): new function replaces all other
			nmwa_dbus_get_[string|string_array|int|boolean] methods
		- nmwa_dbus_get_network_name() and nmwa_dbus_get_device_name()
			consolidated into nmwa_dbus_get_object_name()

2004-10-15 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDbus.c
	  info-daemon/NetworkManagerInfoDbus.c
		- Display an error dialog when the user tries to use an
			"Other wireless network" that's not found.

2004-10-15 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.[ch]
		- Fix up corner cases in applet state, making it
			look more responsive.  Change state to "connecting" when
			the user is forcing a device too.

2004-10-15 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAPList.c
		- (nm_ap_list_update_network): Disown AP after the list takes ownership

	* src/NetworkManagerDbus.c
		- (nm_dbus_nm_set_active_device): Simplify the device setting logic

	* src/NetworkManagerDevice.c
		- Disown APs after the device's AP list takes ownership

2004-10-15 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Update our applet state from the GUI thread

	* panel-applet/NMWirelessAppletDbus.c
		- Greatly simplify the locking to make the GUI thread
			smoother.  Update a private copy of the device list
			and active device and only when done talking to
			NetworkManager turn it over to the GUI thread.

2004-10-15 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAP.[ch]
		- Add "artificial" get/set functions, set for APs that
			aren't discovered as part of a scan but instead
			discovered by force-setting the ESSID

	* src/NetworkManagerDevice.[ch]
		- (nm_device_wireless_network_exists): pass back whether
			or not the discovered AP was encrypted.  Also, try
			falling back to encrypted mode on the card if unencrypted
			association doesn't work
		- (nm_device_find_and_use_essid): If the network requested
			did in fact exists, but it wasn't in our scan list, add
			an "artificial" entry for it.  Some Cisco cards don't
			see non-ESSID-broadcasting APs in their scan but can still
			associate with them if you know the ESSID, this works around
			that behavior
		- (nm_device_do_normal_scan): Carry "artificial" APs over from scan
			to scan if the card is currently associated with that AP

2004-10-15 Dan Williams <dcbw@redhat.com>

	---- We have a website ----
	http://people.redhat.com/dcbw/NetworkManager

	Patch from Robert Paskowitz:
	* src/NetworkManager.c
		- (main): Make sure we are run as root
	* src/NetworkManagerDevice.c
		- Fix type in ad-hoc setting function

	Patch from Thom May:
	* src/backends/NetworkManagerDebian.c
		- Make Debian backend compile again

2004-10-14 Dan Williams <dcbw@redhat.com>

	* Tagged NetworkManager-0_3

2004-10-14 Dan Williams <dcbw@redhat.com>

	Patch from Robert Paskowitz:
	* NEWS
	  src/NetworkManagerDevice.[ch]
	  src/backends/NetworkManagerDebian.c
	  src/backends/NetworkManagerGentoo.c
	  src/backends/NetworkManagerRedHat.c
	  src/backends/NetworkManagerSlackware.c
		- Add support for grabbing and using a broadcast address
			from system config files
		- Some Gentoo backend fixes for grabbing network config
		- Fix LOG_WARN->LOG_WARNING

2004-10-14 Dan Williams <dcbw@redhat.com>

	* NEWS: a few small fixes in the credits

Thu Oct 14 19:12:58 2004  Jonathan Blandford  <jrb@redhat.com>

	* NEWS: prep for release.

Thu Oct 14 16:47:12 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c
	(nmwa_dbus_update_device_wireless_networks): remove warnings.

Thu Oct 14 16:40:39 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c (animation_timeout): Make
	applet->state == APPLET_STATE_NO_NM animation.

	* panel-applet/NMWirelessApplet.c (custom_essid_item_selected):
	set the text correctly.

2004-10-14 Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
		- Only accept and manager 802.3 and 802.11 devices

	* src/NetworkManagerDbus.[ch]
		- (nm_dbus_nm_set_active_device): move most of the actual activation
			logic into NetworkManagerDevice.c
		- (nm_dbus_network_status_from_data): new function
		- (nm_dbus_signal_network_status_change): new function, unused for now
		- (nm_dbus_nm_message_handler): use nm_dbus_network_status_from_data () now

	* src/NetworkManagerDevice.[ch]
		- (nm_device_find_and_use_essid): new function.  Search for, and if found use,
			a random ESSID.

2004-10-14 John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NetworkManagerInfo.c 
		- (main): Added session management

2004-10-14 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletDbus.[ch]
		- Expose network_device_[un]ref()
		- Expose wireless_network_[un]ref()
		- (wireless_network_new_with_essid): new function, create and return
			a wireless network with a particular essid

	* panel-applet/NMWirelessApplet.c
		- Hook up the "other network" dialog to do something

Wed Oct 13 19:31:53 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c: Add an essid dialog.  It
	doesn't work yet, but it looks okay.

	* panel-applet/icons/*png: Resize to 22x22 and install in the
	right place.

2004-10-13 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Add function to print out applet_state in a readable
			manner

	* src/NetworkManager.c
		- (main): Don't segfault when nm_dbus_init() fails, we had
			a left-over call to hal_shutdown() into which we passed NULL

	* src/NetworkManagerAP.c
		- (nm_ap_set_essid): Allow NULL essids

	* src/NetworkManagerAPList.[ch]
		- More use of nm_ap_list_[un]lock ()
		- (nm_ap_list_get_ap_by_essid): don't warn when looking for a NULL
			network/essid, just return nothing.  Also skip over NULL
			essid access points in the list when searching
		- (nm_ap_list_get_ap_by_address): new function
		- (nm_ap_list_update_network): set the access point's key source to
			NULL when the key returned from NetworkManagerInfo is NULL or
			of 0 length
		- nm_ap_list_update_keys() -> nm_ap_list_update_properties(), and
			copy timestamp over too
		- (nm_ap_list_copy_essids_by_address): new function, attempt to
			find the correct ESSID for a blank-essid access point by searching
			through another list and matching access point MAC addresses
		- (nm_ap_list_diff): exclude blank-essid access points from the diffs

	* src/NetworkManagerDbus.c
		- (nm_dbus_nm_set_active_device): deal with random networks the user
			may specify.  This is mainly for access points that don't
			broadcast their essid.  So if the user tells us to associate with
			some random ESSID that's not in our access point list, we find
			out if the access point does in fact exist (by attempting association
			and then matching that access point's MAC address with the essid the
			user gave us) and then we switch to it.
		- (nm_dbus_devices_handle_request): don't add blank-essid access points
			to the returned list of networks for the "getNetworks" method

	* src/NetworkManagerDevice.[ch]
		- Extra debugging info for link detection
		- (nm_device_ap_list_get_ap_by_address): new function, return an AP
			based on MAC address
		- (nm_device_get_path_for_ap): ignore blank-essid access points
		- (nm_device_wireless_network_exists): new function, find out whether
			a random ESSID exists by attempting to associate with it
		- (nm_device_do_normal_scan): allow blank-essid access points in our
			device list as long as they have an AP MAC address we can use.
			Also send WirelessNetwork[Dis]Appeared signals for non-active
			devices too.  Lets the applet update more frequently.

	* src/backends/NetworkManagerGentoo.c
		- Patch from: Robert Paskowitz
			- Update backend code for Gentoo
			- Implement nm_system_device_update_config_info ()

	* test/nmclienttest.c
		- (set_network_device): new function, takes a command-line argument
			and tells NetworkManager to use that wireless network

Wed Oct 13 John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NetworkManagerInfo.c (nmi_spawn_notification_icon): Stop respawning
	if the notification icon crashes 5 times within 5 seconds of each respawn 

Tue Oct 12 22:53:04 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c (nmwa_update_state): remove
	g_print.

Tue Oct 12 22:44:15 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.h: Change the name of the icons.

	* panel-applet/NMWirelessApplet.c: (animation_timeout),
	(nmwa_update_state), (nmwa_destroy), (nmwa_setup_widgets),
	(nmwa_icons_free), (nmwa_icons_load_from_disk), (nmwa_icons_init):
	Change the name of the icons.

	* panel-applet/menu-info.c: (nm_menu_wired_class_init),
	(nm_menu_wired_expose_event), (nm_menu_network_class_init),
	(nm_menu_wireless_class_init), (nm_menu_wireless_new),
	(nm_menu_wireless_expose_event): Really bad hack to get the style
	to draw in the right color.

Tue Oct 12 John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NetworkManagerInfo.c (main):  Add child watch to respawn
	Notification if it crashes

Fri Oct  8 07:19:55 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c (nmwa_dbus_get_double): 
	(nmwa_dbus_get_string): remove unused functions

	* panel-applet/NMWirelessApplet.c (nmwa_about_cb):
	(nmwa_cancel_timeout), (nmwa_get_menu_pos), (nmwa_factory):
	remove unused functions

	* panel-applet/NMWirelessApplet.c: Rewrite icon code.

2004-10-12 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c
		- New functions:
			wireless_network_new
			wireless_network_copy
			network_device_new
			network_device_copy

	* src/NetworkManagerDevice.[ch]
		- New functions:
			nm_device_set_mode_managed
			nm_device_set_mode_adhoc
		- Use these functions where appropriate
		- When creating a new wireless device, force the card
			to managed/Infrastructure mode as soon as possible

2004-10-12 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- Force wireless cards into Infrastructure mode before we use them

2004-10-12 Dan Williams <dcbw@redhat.com>

	* TODO
		- Remove bit about static IP address support

	* src/NetworkManagerUtils.c
		- (nm_spawn_process): Add some error reporting

	* src/NetworkManagerDevice.c
		- (nm_device_activation_configure_ip): hook up to the static config
			routines in the backends

	* src/backends/NetworkManagerRedHat.c
		- (nm_system_device_update_config_info): use shvar.c routines to
			parse the config file iformation, not our own
		- (nm_system_device_setup_static_ip4_config): new function, based
			heavily on 'ifup' script and 'ipcalc' tool code.  Set up a device
			with a static IP address and gateway

	* src/backends/shvar.[ch]
		- Parser (filched from initscripts package) for ifcfg-* files

	* src/backends/NetworkManagerSystem.h
	  src/backends/NetworkManagerGentoo.c
	  src/backends/NetworkManagerDebian.c
	  src/backends/NetworkManagerSlackware.c
		- Stub nm_system_device_update_config_info() and nm_system_device_setup_static_ip4_config()

2004-10-11 Dan Williams <dcbw@redhat.com>

	* TODO
		- Remove bit about more robust AP diffing since I just implemented it

2004-10-11 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAP.c
		- (nm_ap_new, nm_ap_new_from_ap): Don't crash when we don't have
			enough RAM to allocate new AP structures, but return NULL instead

	* src/NetworkManagerAPList.[ch]
		- (nm_ap_list_is_empty): new function
		- (nm_ap_list_combine): new function, combine two access point lists
		- (nm_ap_list_copy_keys): new function, copy keys from one list
			into another

	* src/NetworkManagerDevice.[ch]
		- Rename some functions to be clearer:
			nm_device_get_best_ap_frozen -> nm_device_is_best_ap_frozen
			nm_device_just_activated     -> nm_device_is_just_activated
			nm_device_activating         -> nm_device_is_activating
			nm_device_now_scanning       -> nm_device_is_scanning
		- Cache the last 4 scans so that the access point list is more stable.
			We combine the lastest two scans and use that as the AP list,
			and diff that combined list against the combination of the earliest
			two cached scans for the WirelessNetworkAppeared/Dissappeared signals

2004-10-08 John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NWManagerInfo.h
		- (struct NetworkManagerInfo): add shutdown_timeout GSource

	* info-daemon/NWManagerInfoDbus.c
		- (shutdown_callback): new function
		- (nmi_dbus_filter): Create a 30 second timeout until shutdown
			if NetworkManager goes away.  Kill the timeout
			if NetworkManager restarts before the 30 seconds
			are up.
		- (nmi_dbus_service_init): 
			- call gtk_main_quit if NetworkManager is not running
			- add filters to monitor dbus service creations and
				deletions
	
2004-10-08 John (J5) Palmieri <johnp@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- (nmwa_update_state): Hide notification icon if we are only
			showing one wired card and no wireless interfaces 
			(Red Hat Bug #134895)

	* panel-applet/NMWirelessAppletDbus.c
		- (nmwa_dbus_filter): changed exit to gtk_main_quit ()

	* info-daemon/NWManagerInfo.c
		- (main): Terminated the notification_icon_cmd array with a NULL

2004-10-08  Hendrik Brandt  <hebra@cvs.gnome.org>

	* configure.in (ALL_LINGUAS): Added de (German).

2004-10-08 Dan Williams <dcbw@redaht.com>

	* src/NetworkManagerDevice.c
		- Be a bit more robust about link checking, ie make sure that
			the WEP key we were given actually has some data in it

2004-10-08 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c (main):
		- Initialize GError object to NULL

2004-10-08 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c
		- Die if NetworkManagerInfo dies, since it manages our lifetime

2004-10-08 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.[ch]
	  info-dameon/NetworkManagerInfoDbus.[ch]
	  info-daemon/NetworkManagerInfoPassphraseDialog.[ch]
		- Preserve original label text in the passphrase dialog so that
			it actually gets updated with the new network name the next
			time around.  Previously, we were overwriting it so you'd get
			the wrong network name to enter a key for
		- Add a "Key Type" combo to the passphrase dialog, user selects
			encryption key type now, type is stored in GConf too
		- Adjust NM<->NMI DBUS protocol to pass the key type back to NM too

	* src/NetworkManagerAP.[ch]
		- Remove all the encyption method magic.  It's now set by the user
			and NetworkManager retrieves the type of encryption key from
			NetworkManagerInfo

	* src/NetworkManagerAPList.[ch]
	  src/NetworkManagerDbus.[ch]
		- Adjust to new way of setting encryption key and method
		- Pull encryption method down from NMI along with key

	* src/NetworkManagerDevice.[ch]
		- Removed encryption method fallback magic as the method is now
			determined by the user.  This greatly simplifies the connection
			logic.
		- More robust connection/link logic.  Besides removing the encryption
			method fallback magic, check whether or not the card is receiving
			invalidly encrypted packets, which usually indicates that we have
			a bad WEP key set.
		- Don't blindly forge ahead when DHCP fails (still not completely fixed)

	* test/nminfotest.c
		- Test out new "Key Type" stuff in the NMI passphrase dialog

2004-10-07 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.conf
		- Allow root user to run NMI too

2004-10-06 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.[ch]
	  src/NetworkManagerDbus.c
	  doc/NetworkManager DBUS API.txt
		- Add a new status tag "scanning", which is set when there
			is no active network connection, but NetworkManager is
			looking for an access point to associate with

	* panel-applet/main.c
		- Cast the applet appropriately for gtk_widget_show_all ()

Mon Oct  4 12:55:41 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/eggtrayicon.[ch]:
	* panel-applet/main.c: Add missing file

2004-10-04 Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.[ch]
		- Add a slightly more robust method of determining if the WEP key
			is correct or not, by checking the WEP-discarded packet count
			on the card

	* info-daemon/NetworkManagerInfo.c
		- (nmi_gconf_notify_callback): Fix GConf essid escaping, should
			un-escape values we pull out rather than escaping them

2004-10-03  Marcel Telka  <marcel@telka.sk>

	* configure.in (ALL_LINGUAS): Added sk.

Fri Oct  1 18:26:03 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/menu-info.c (nm_menu_wired_class_init): update look
	and feel.  We should be back to working, and have a good, clean
	look.

2004-09-30 Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c
	  info-daemon/NetworkManagerInfoDbus.c
	  test/nminfotest.c
		- Escape ESSIDs in gconf

	* src/NetworkManagerDevice.c
		- Fix pseudo-scanning to use netowrk list from info daemon

Wed Sep 29 18:18:24 2004  Jonathan Blandford  <jrb@redhat.com>

	* configure.in: Add a temporary --enable-notification-icon.  This
	will prolly go away.

	* info-daemon/Makefile.am:
	* info-daemon/NetworkManagerInfo.c:
	* info-daemon/NetworkManagerInfo.h: Use a notification icon.

	* panel-applet/Makefile.am:
	* panel-applet/NMWirelessApplet.c: Turn into a notification icon
	* panel-applet/NMWirelessApplet.h:

Tue Sep 28 16:35:20 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c: Fix deadlock.  Add a separator
	before 'select custom ESSID'.

	* panel-applet/menu-info.c: Start rewrite for better headers.  Not
	fully complete, but syncing in prep for merge.

	* panel-applet/icons/*png: New images

2004-09-28 Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
	  src/NetworkManagerDevice.c
	  src/NetworkManagerPolicy.c
		- Don't blow away an active wired connection on startup

2004-09-28  Bryan Clark  <clarkbw@cvs.gnome.org>

	Changes from J5
	
	* info-daemon/NetworkManagerInfo.conf: fixed own permissions

	* info-daemon/NetworkManagerInfoDbus.c: added service name to
	syslog output

Wed Sep 22 14:19:48 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c: Only add essid's if we actually
	have a wireless card.

Wed Sep 22 14:05:48 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c: move the custom essid item.
	Also, get the right device strings.

Wed Sep 22 13:51:45 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/menu-info.c (nm_menu_network_draw_indicator): Flip
	the logic to make this right.

	* panel-applet/NMWirelessApplet.c (sort_networks_function): sort
	devices so that wired networks are always first.

2004-09-22    <clarkbw@cvs.gnome.org>

	* initscript/Debian/.cvsignore:
	* initscript/Slackware/.cvsignore:
	Added new cvsignores for Makefile, Makefile.in
	
	* test/.cvsignore:
	Added nmtestdevices
	
	* src/NetworkManagerDevice.c: 
	* src/NetworkManager.c: 
	Updated the wireless/wired HAL device strings from net.ethernet to
	net.80203 or net.80211 depending on wired or wireless respectively
	
	* examples/python/NetworkManager.py: 
	s/Quality/Strength/

	* examples/python/systray/network_tray.py:
	Lots of little changes and fixes.  been rotting for a while so I
	figured I'd finally sync them all with CVS

Tue Sep 21 18:05:34 2004  Jonathan Blandford  <jrb@redhat.com>

	* configure.in: Add graphics

	* panel-applet/Makefile.am: Add graphics

	* panel-applet/icons/*: Add graphics

	* panel-applet/NMWirelessApplet.c: Use new menu times to display
	the icons fully lined up.

	* panel-applet/menu-info.c: 
	* panel-applet/menu-info.h: Add another menu type.

Fri Sep 17 14:04:34 2004  Jonathan Blandford  <jrb@redhat.com>

	* panel-applet/NMWirelessApplet.c: Redo the menu item code.

	* panel-applet/menu-item.[ch]: Wireless menu item.

2004-09-15  John (J5) Palmieri <johnp@redhat.com>

	* info-daemon/NetworkManagerInfo.conf
		- Created a more robust security policy for the DBus service
			- everything is denied by default
			- root can own and send to the service
			- users logged in at the console can send to the service

2004-09-13  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- (nm_device_get_essid): use iw_get_basic_config() rather than
			iw_get_ext (SIOCGIWESSID) since prism54 cards don't like
			the latter

2004-09-13  Dan Williams <dcbw@redhat.com>

	* TODO: fix typo

	* docs/NetworkManager DBUS API.txt
		- Update for new signal strength changes

	* panel-applet/NMWirelessApplet.c
		- Make panel icon show strength of the current connection
		- Cleanups and memleak fixes

	* panel-applet/NMWirelessApplet.h
		- Add data members for signal strength on devices and networks

	* panel-applet/NMWirelessAppletDbus.c
		- Free more DBusErrors
		- Update for new signal strength changes
		- Make devices and networks more like real objects, use ref/unref methods
		- Actually unlock the mutex when updating the active device

	* src/NetworkManagerAP.c
		- Change AP functions and data members from "quality"->"strength"

	* src/NetworkManagerDbus.c
		- Kill "getMaxQuality" and "getQuality" methods
		- Add "getStrength" methods for Networks and Devices

	* src/NetworkManagerDevice.[ch]
		- Add accessors for device strength
		- Add functions to update strength for a device.  Note that not all drivers
			actually support signal strength for scanned access points (Atmel drivers
			being one)
		- Calculate signal strength for each AP during scan

	* src/NetworkManagerWireless.[ch]
		- Add function to return signal strength % from a device and a raw quality struct

	* test/nmclienttest.c
		- Update for new signal strength changes

2004-09-11  Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
		- Fix race condition between initscripts and NM on card insertion
			which could cause a card to keep an IP address and routes around
			even when it was not the active device

	* src/NetworkManagerDbus.c
		- Fix compile errors, free more DBusErrors

2004-09-11  Dan Williams <dcbw@redhat.com>

	* docs/NetworkManager DBUS API.txt
		- Add an explanation of NM's API

	* src/NetworkManagerDbus.c
		- Free some more DBusErrors if needed

2004-09-11  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
	  panel-applet/NMWirelessAppletDbus.c
		- Start using NetworkDevice/WirelessNetwork structures in more places
		- Update for unified device/network forcing in NetworkManager

	* src/NetworkManager.c
		- some code consolidation

	* src/NetworkManagerDbus.c
		- (nm_dbus_nm_set_active_device): "setActiveDevice" now takes either one
			or two arguments:  the first is the NM ID of the device to switch to,
			and the second (optional) argument is the ESSID of a wireless network
			to use as well.
		- Get rid of "setNetwork" method due to above change

	* src/NetworkManagerDevice.c
		- (nm_device_new): perform scan and update best AP on device creation
		- nm_device_activation_cancel_if_needed()->nm_device_activation_should_cancel()
		- nm_device_activation_signal_cancel()->nm_device_activation_cancel(), and
			spin waiting for cancellation to finish before returning

	* src/NetworkManagerPolicy.c
		- Changes here clarify the situations in which a device switch occurs, and 
			make sure to keep using a forced device and network if the user gives
			us one
		- Remove old unused code

2004-09-11  Martin Willemoes Hansen  <mwh@sysrq.dk>

	* configure.in: Added Danish (da) to ALL_LINGUAS.

2004-09-09  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c
		- Pull fresh devices and networks from NM when wireless networks
			change.  Provides faster feedback of a forced wireless network

	* src/NetworkManagerDbus.c
		- Return error when "getMaxQuality" is called on a wired device
		- Make best_ap freezing actually work again, and signal cancellation
			of activation if there's already a device activation when the user
			freezes the best_ap

	* src/NetworkManagerDevice.c
		- Don't clear out the best_ap for wireless devices when the link goes
			down, that's done elsewhere
		- Kill any dhcp daemons when cancelling device activation since they
			may be stuck waiting for a DHCP address, and since we're cancelling
			activation we don't care about that anymore

	* src/NetworkManagerPolicy.c
		- Make sure to unref the device we ref earlier (we refed it to make sure
			it stuck around during device activation and such)
		- If we were going to change the best device, but its activating currently
			(and therefore the change didn't occur due to the check earlier)
			we mark the state changed to we come back to it later when device
			activation has canceled and its no longer activating

	* src/backends/NetworkManagerRedHat.c
		- SIGKILL dhcp daemons rather than SIGTERM-ing them

2004-09-09  Bryan Clark  <clarkbw@cvs.gnome.org>

	* info-daemon/passphrase.glade: 
	set passphrase input to activates_default : True

	* examples/python/systray/network_tray.py
	(network_tray.sort_networks):

	Added support for having wireless always scanning

2004-09-09  Dan Williams <dcbw@redhat.com>

	NOTE: this commit changes the behavior of wireless devices in
	NetworkManager.  They are now up all the time, scanning all
	the time.  Only the active device has an IP address and routing
	information set up however.  Also, NetworkManager will no longer
	opportunistically switch wireless networks when a better one
	comes in range, it will remain associated with one wireless network
	until that one drops out.

	* panel-applet/NMWirelessApplet.c
	  panel-applet/NMWirelessAppletDbus.c
		- List all wireless cards and their respective networks

	* src/NMLoadModules
		- Use full path to /sbin/ip

	* src/NetworkManager.c
		- Keep wireless devices up all the time so they can scan

	* src/NetworkManagerDbus.c
		- On a WirelessNetworkUpdate signal from NMI, don't update
			the "best" AP

	* src/NetworkManagerDevice.c
		- (nm_device_set_link_active): clear out the best ap for
			wireless devices when the link is set to FALSE
		- Scan on all wireless cards, all the time
		- (nm_device_activation_worker): split out the wireless card
			link-waiting code to a separate function
		- Keep wireless cards up even if device activation fails
		- Don't update the "best" ap as much

	* src/NetworkManagerPolicy.c
		- Don't update the best ap when checking if its frozen,
			let link checking clear out a frozen best ap for us

	* src/NetworkManagerWireless.c
		- Scan on all wireless cards, all the time

2004-09-09  Francisco Javier F. Serrador  <serrador@cvs.gnome.org>

	* configure.in: Added 'es' (Spanish) to ALL_LINGUAS.

2004-09-09  Ankit Patel <ankit@redhat.com>

	* configure.in: Added 'gu' (Gujarati) to ALL_LINGUAS.

2004-09-09  Pablo Saratxaga  <pablo@mandrakesoft.com>

	* configure.in: Added Walloon (wa) to ALL_LINGUAS.

2004-09-08  Bryan Clark  <clarkbw@cvs.gnome.org>

	* examples/python/NetworkManager.py: 
	added CONNECTED, CONNECTING, and DISCONNECTED states
	added methods to return number of devices of a single type

	* examples/python/systray/network_tray.py: 
	did some tweaks to get the menu looking near what it is supposed
	to look like.  Also did a Airo card hack to make it show the
	correct AP quality

2004-09-08  Dan Williams <dcbw@redhat.com>

	* panel-applet/no-networkmanager.png
	  panel-applet/Makefile.am
	  panel-applet/NMWirelessApplet.c
		- Add a "NetworkManager not running" icon and use it
		- Use new consolidated GConf keys rather than Preferred/Trusted

	* TODO: update

	* info-daemon/NetworkManagerInfo.c
	  info-daemon/NetworkManagerInfoDbus.[ch]
	  info-daemon/NetworkManagerInfoPassphraseDialog.c
		- There are now no longer two separate lists of wireless networks,
			but one list where each network is "trusted" or not trusted
		- Add a "getNetworkTrusted" dbus method
		- "WirelessNetworkUpdate" signal now sent rather than
			"PreferredNetworkUpdate/TrustedNetworkUpdate" signals
		- Start freeing some dbus errors (not completed yet)

	* info-daemon/passphrase.glade
		- Remove the "don't show" hints for pager and taskbar
		- Add a title since its going to be in the taskbar

	* src/NetworkManager.[ch]
	  src/NetworkManagerAPList.[ch]
		- There are now no longer two separate lists of wireless networks,
			but one list where each network is "trusted" or not trusted

	* src/NetworkManagerAP.[ch]
		- Add get/set "trusted" accessors and data bit

	* src/NetworkManagerDbus.[ch]
		- Add function to get "trusted" status of a network from NetworkManagerInfo
		- Trap new WirelessNetworkUpdate signal rather than old separate signals

	* src/NetworkManagerDevice.[ch]
		- Add per-device config data (ip4 addr, gateway, netmask) and accessors
		- (nm_device_new): Get device config from backend when initializing devices
		- (nm_device_activation_worker): Split out device configuration on
			activation to deal with static/dynamic IP differences, and try encryption
			fallbacks on a device if the encryption method for the best AP is not good
		- (nm_device_update_best_ap): convert to new consolidated access point lists from
			NetworkManagerInfo, and copy over latest NMI info to best_ap when setting it

	* src/NetworkManagerWireless.c
		- libgcrypt code wasn't converting the MD5 digest to an ascii string, fix it

	* src/backends/NetworkManagerRedHat.c
	  src/backends/NetworkManagerSystem.h
		- (nm_system_device_update_config_info): Add function to get device configuration
			from system data in ifcfg-* files

	* src/backends/NetworkManagerDebian.c
	  src/backends/NetworkManagerGentoo.c
	  src/backends/NetworkManagerSlackware.c
		- Add stub functions for getting device configuration

2004-09-07  Dan Williams <dcbw@redhat.com>

	* src/backends/NetworkManagerRedhat.c
	  src/backends/NetworkManagerSlackware.c
		- Use full path to /sbin/ip everywhere

2004-09-07  Dan Williams <dcbw@redhat.com>

	Patch from: Narayan Newton <narayan_newton@yahoo.com>

	* configure.in
	  initscript/Makefile.am
	  initscript/Slackware/Makfile.am
	  initscript/Slackware/rc.networkmanager
	  src/Makefile.am
	  src/backends/NetworkManagerSlackware.c
		- Add Slackware support

2004-09-07  Dan Williams <dcbw@redhat.com>

	Patches below from:
		<j@bootlab.org>
		Mark Roach <mrroach@okmaybe.com>
		Thom May <thom@debian.org>

	* configure.in
	  initscript/Debian/NetworkManager
	  initscript/Debian/Makefile.am
		- Initscript for Debian

	* src/backends/NetworkManagerDebian.c
		- Add missing system init function to allow compilation
			on Debian

2004-09-03  Raphael Higino <raphaelh@cvs.gnome.org>

	* configure.in: Added 'pt_BR' to ALL_LINGUAS.

2004-09-03  Akagic Amila <bono@linux.org.ba>

	* configure.in: Added 'bs' to ALL_LINGUAS.

2004-09-02  Colin Walters  <walters@verbum.org>

	* src/backends/NetworkManagerRedHat.c (nm_system_device_run_dhcp)
	(nm_system_device_stop_dhcp, nm_system_device_flush_routes): Use
	g_strdup_printf instead of arbitrarily sized buffers.

2004-09-01  Colin Walters  <walters@verbum.org>

	* NetworkManager.pc.in: New file.

	* Makefile.am, .cvsignore, configure.in: Add NetworkManager.pc.

2004-09-01  Amanpreet Singh Alam  <aalam@redhat.com>
	
	* configure.in: Punjabi(pa) is added to po/.

2004-08-31  Dan Williams <dcbw@redhat.com>

	* Remove 'debug' extern global from all files since we now
		use syslog()

	* src/NetworkManager.[ch]
		- Break out routine that get the net.interface property from HAL,
			removing that logic from nm_create_device_and_add_to_list()
		- (nm_create_device_and_add_to_list): make this a bit more general so
			it doesn't do the talking to HAL.  Also add arguments to facilitate
			the create of test devices.
		- (nm_data_mark_state_changed): rename from nm_data_set_state_modified()
		- (nm_data_new, main, nm_print_usage): add new argument "--enable-test-devices"
			which makes NetworkManager listen for dbus commands to create test
			devices, which have no backing hardware.  Use when you're on a plane
			for example, and/or forgot your wireless card at home.  Test devices
			_cannot_ be created unless NM is started with --enable-test-devices.

	* src/NetworkManagerDbus.[ch]
		- New "getLinkActive" method for devices
		- New "setLinkActive" method for devices (only works on test devices)
		- New "createTestDevice" method on NetworkManager object to create a test
			device of a specified type (ie wired, wireless).  UDI is created from
			scratch, as is the interface name.  Only works when NM is started with
			--enable-test-devices switch.
		- New "removeTestDevice" method on NetworkManager object which removes a
			test device.  Only works when NM is started with --enable-test-devices

	* src/NetworkManagerDevice.[ch]
		- Logic to facilitate test devices.  Add variables to NMDevice struct to indicate
			whether a device is a test device or not, and what its link status is.
		- Deal with test devices in most functions.  For those that work directly on hardware
			special-case test devices.
		- (nm_device_new): don't create a test device if test devices weren't enabled on the
			command-line.
		- (nm_device_update_link_active): split out logic for wired and wireless device link
			checking to separate functions to facilitate test device link checking.
		- (nm_device_set_enc_key): Since some drivers for wireless cards are daft and
			don't make a distinction between System Authentication and Encryption
			(namely Cisco aironet), we use Open System auth when setting a WEP key
			on the card.  We don't deal with Shared Key auth yet.
		- (nm_device_activation_worker): split the activation cancel check logic out into
			a separate routine nm_device_activation_cancel_if_needed()
		- (nm_device_activation_signal_cancel): rename from nm_device_activation_cancel()
		- (nm_device_fake_ap_list): Test wireless devices obviously cannot scan, so create
			a list of fake access points that they can "see"
		- (nm_device_is_test_device): return whether or not a device is a test device

	* src/NetworkManagerPolicy.c
		- (nm_policy_get_best_device): attempt to deal with wireless network selection,
			previously if you "locked"/forced NM to use a wireless device but then
			selected a wireless network for NM to use, it would switch to a wired device.
			So, if the active device is wireless and it has a "forced" best AP, use it
			if the "forced" best AP is still valid
		- (nm_state_modification_monitor): deal with NULL best devices, for example
			there were no usable network devices, or the last one was removed

	* src/backends/NetworkManager*.c
		- Deal with test devices, mostly just return success for operations like getting
			a DHCP address

	* test/nmtestdevices.c
		- Test tool to create/remove/link-switch test devices

2004-08-30  Bryan Clark  <clarkbw@cvs.gnome.org>

	* examples/python/NetworkManager.py: 
	added convience functions has_wired_device and has_wireless_device

	* examples/python/systray/network_tray.py: 
	cleaned up a bunch of cruft, added support for listing wireless
	networks just like the real applet.  This is probably all I'm
	going to work on this applet from now on.
	TODO: add support for actually changing networks and devices

	* examples/python/NetworkManager.py (NetworkManager.get_device): 
	changed "nm.networks" into a dict from a list so I can store all
	the cool information about networks in there

	* examples/python/systray/network_tray.py: 
	Added nice message when you try to run without running make first

	* examples/python/NetworkManager.py: 
	Bug fixes to the code so we get all the device information
	that we need in get_device()
	
	* examples/python/NMTester.py: 
	Fixed _print_device_list to print_device_list

2004-08-29  Seth Nickell  <seth@gnome.org>

	* configure.in:

	Actually properly setup the Debian backend in configure.
	
2004-08-29  Colin Walters  <walters@verbum.org>

	* test/nminfotest.c: Include string.h and stdlib.h.
	(get_network_string_property, get_networks_of_type): Return NULL.

	* test/nmclienttest.c (get_device_name, get_active_device): Return
	NULL.

	* src/backends/NetworkManagerRedHat.c (nm_system_device_stop_dhcp): Just
	use strlen, fgets always NULL-terminates the string.

	* src/NetworkManagerDbus.c (nm_dbus_nmi_filter,
	dbus_message_get_member): Remove /* in comment.

	* src/NetworkManagerUtils.c (LOCKING_DEBUG): Ditto.

	* src/NetworkManager.c (quit): Unused, delete.
	(nm_data_free): Cast arg to GFunc.

	* panel-applet/NMWirelessAppletDbus.c: Need to include
	string.h, and dbus-glib-lowlevel.h (the latter is needed
	for dbus_connection_setup_with_g_main at present).
	(nmwa_dbus_update_wireless_network_list): Parenthesize
	assignment in conditional.
	(nmwa_dbus_worker): Return NULL.

	* panel-applet/NMWirelessApplet.c (nmwa_redraw)
	(nmwa_get_menu_pos, nmwa_toplevel_menu_activate)
	(nmwa_menu_add_text_item, nmwa_setup_widgets): Kill unused variables.
	(nmwa_populate_menu): Return NULL on failure, instead of just
	return;

	* initscript/NMLaunchHelper.c (g_timeout_add): Cast arg to GSourceFunc.

	* info-daemon/NetworkManagerInfoNetworksDialog.c (nmi_networks_dialog_init): Kill unused
	variables.

	* info-daemon/NetworkManagerInfo.c (nmi_print_usage): Unused,
	delete.
	
2004-08-29  Colin Walters  <walters@verbum.org>

	* src/NetworkManagerDbus.c (nm_dbus_get_network_timestamp): Return
	a GTimeVal instead of time_t.  This is easier to work with,
	since time_t may be a long or double, we don't know.

	* src/NetworkManagerDbus.h: Update prototype.
	
	* src/NetworkManagerAP.c (struct NMAccessPoint): Store a GTimeVal
	instead of time_t.
	(nm_ap_get_timestamp): Update to return GTimeVal.
	(nm_ap_set_timestamp): Update to take GTimeVal.
	
	* src/NetworkManagerDevice.c (nm_device_update_best_ap): Update
	to handle GTimeVal.

	* src/NetworkManagerAPList.c (nm_ap_list_update_network): Handle
	GTimeVal change.
	(nm_ap_list_print_members): Fix warnings in printf format.

2004-08-29  Colin Walters  <walters@verbum.org>
	
	* panel-applet/NMWirelessApplet.c: Include config.h.

2004-08-29  Colin Walters  <walters@verbum.org>

	* configure.in: Generate config.h.

	* configure.in: Dump dependency on OpenSSL; we can't
	use it since this package is GPL:
	http://www.gnome.org/~markmc/openssl-and-the-gpl.html
	Instead, check for libgcrypt, use it if available,
	otherwise use included MD5 code.

	* src/gnome-keyring-md5.h, src/gnome-keyring-md5.c:
	Suck in from gnome-keyring, munge a bit.
	
	* src/Makefile.am (NetworkManager_SOURCES) <!WITH_GCRYPT>: Include
	gnome-keyring-md5.h gnome-keyring-md5.c.
	(NetworkManager_LDADD) <WITH_GCRYPT>: Add dep on LIBGCRYPT_LIBS.

	* src/NetworkManagerWireless.c (nm_md5): New function, uses
	libgcrypt or included gnome-keyring md5 bits.
	(nm_wireless_128bit_key_from_passphrase): Use nm_md5.

2004-08-28  Kjartan Maraas  <kmaraas@gnome.org>

	* configure.in: Add «nb» and «no» to ALL_LINGUAS.

2004-08-27  Bryan Clark  <bclark@redhat.com>

	* examples/python/systray/Makefile: 

	Updated the clean section
	
	* examples/python/systray/trayiconmodule.c: 
	* examples/python/systray/trayicon.override: 
	* examples/python/systray/network_tray.py: 
	* examples/python/systray/eggtrayicon.h: 
	* examples/python/systray/eggtrayicon.c: 
	* examples/python/systray/Makefile: 
	* examples/python/README: 
	* examples/python/NetworkManager.py: 
	* examples/python/NMTester.py: 

	Initial commit of these python example files

Fri Aug 28 2004 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Make current device bold
		- Show more user-friendly device name if we got one from hal

	* panel-applet/NMWirelessAppletDbus.c
		- Grab "info.product" key from hal for network devices
		- Cache the current active device

2004-08-27  Adam Weinberger  <adamw@gnome.org>

	* configure.in: Added en_CA to ALL_LINGUAS.

2004-08-27  Christian Rose  <menthos@menthos.com>

	* configure.in: Added "sv" to ALL_LINGUAS.

Thu Aug 26 2004 Dan Williams <dcbw@redhat.com>

	* Tag NetworkManager-0.2

Thu Aug 26 17:23:16 2004  Jonathan Blandford  <jrb@redhat.com>

	* initscripts/Makefile.am
	* configure.in: Make pass distcheck

	* po/ChangeLog: added

Thu Aug 26 2004 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Remove debugging code
		- Enable device switching from menus

	* panel-applet/NMWirelessAppletDbus.[ch]
		- Method for asking NM to switch devices

	* src/NetworkManagerDevice.c
		- Set dev->activating earlier, avoids race between
			the dbus signal of "DeviceActivating" and setting
			dev->activating (which is what NM's "status" method call
			looks at)

Thu Aug 26 2004 Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.[ch]
		- Rework menu code to add devices to menu, and to show
			signal strength for each access point.  Code cleanups
			too.

	* panel-applet/NMWirelessAppletDbus.c
		- Grab network devices from NetworkManager too
		- Grab quality information from NM for wireless networks

	* src/NetworkManagerDbus.[ch]
		- Add dbus methods for getting the HAL UDI from a device and
			for getting its base quality, if its wireless
		- Consolidate some functions (wireless network notifications,
			device notifications)
		- Add method for requesting NM to use a particular device

	* src/NetworkManager.c
		- Change for function consolidations from NetworkManagerDbus.c
		- Implement active device locking and user-requested devices
			(ie, tell NM to use a particular device instead of the one
			it autochose)

	* src/NetworkManagerDevice.c
		- Add method for getting the base quality of a device, if its
			wireless
		- Grab device base quailty info from iwlib during scans

	* src/NetworkManagerPolicy.c
		- Use a user-requested device rather than the auto-chosen device
			if we are told to

Thu Aug 26 15:12:36 2004  Jonathan Blandford  <jrb@redhat.com>

	* Makefile.am: add po as a supdir

	* autogen.sh: use gnome-autogen.sh

	* initscript/Gentoo/.cvsignore:
	* initscript/RedHat/.cvsignore: Shut up cvs

	* panel-applet/Makefile.am: Define GNOMELOCALEDIR for bonobo.

	* panel-applet/NMWirelessApplet.c: (nmwa_populate_menu),
	(nmwa_fill): Use gettext.

	* configure.in: add gettext support
	* po/.cvsignore:
	* po/NetworkManager.pot:
	* po/POTFILES.in:

2004-08-26  Seth Nickell  <seth@gnome.org>

	* panel-applet/NMWirelessApplet.c: (nmwa_destroy),
	(nmwa_menu_item_activate), (nmwa_toplevel_menu_activate),
	(nmwa_add_menu_item), (nmwa_menu_item_data_free),
	(nmwa_dispose_menu_items), (nmwa_populate_menu),
	(nmwa_setup_widgets), (do_not_eat_button_press), (nmwa_new):
	* panel-applet/NMWirelessApplet.h:

	Use a menu bar instead of a button for the main clickable
	thingy.
	
2004-08-25  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDevice.c
		- (nm_device_set_enc_key): always set device to "open" mode instead of
			turning encryption off, because the Cisco driver doesn't associate
			with WEP-enabled access points unless we are in "open"

2004-08-25  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerWireless.c
		- Don't try to defererence blank passphrases

2004-08-25  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Rebuild the menu whenever a user clicks

2004-08-25  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- (nmwa_udpate_state): Set panel icon to "wired" (for lack of better ones)
			when NM isn't around or when its not connected

	* src/NetworkManagerDevice.c
		- (nm_device_activation_worker): Make sure to reset dev->activating if we get
			canceled.

2004-08-25  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessAppletDbus.c
		- (nmwa_dbus_get_bool, nmwa_dbus_get_network_encrypted): correct method name
			for getting encryption, and don't stop on "val" once we've gotten it
			from NetworkManager.  Short form:  encryption should now show up.

2004-08-25  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Set ESSID on a gconf trusted network too when force-setting the wireless
			network to associate with

2004-08-25  Dan Williams <dcbw@redhat.com>

	* panel-applet/*
		- Rework the panel applet to do all DBUS communication in a separate
			thread

2004-08-25  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.[ch]
		- Remove "get_next_priority" function

	* info-daemon/NetworkManagerInfoDbus.[ch]
		- Convert "priority" functions to "timestamp"

2004-08-25  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAP.[ch]
		- Add a "enc_method_good" member and accessors to an Access Point
			to signal when we've found the correct encryption method
			for an access point
		- Add a "timestamp" member and accessors, remove "priority" member
			and accessors (use timestamps instead)
		- Rename "wep_key"->"enc_key"
		- (nm_ap_get_enc_key_hashed): new, return the correct mangled key
			for a specified encryption method using the access points
			source encryption key/passphrase

	* src/NetworkManagerAPList.c
		- When updating a network with dbus, grab timestamp now instead of
			priority

	* src/NetworkManagerDBus.[ch]
		- Add signal for "DeviceActivating"
		- Switch priority->timestamp

	* src/NetworkManagerDevice.c
		- Change references of "wep_key" -> "enc_key" or "key"
		- Signal DeviceActivating when starting activation
		- When activating a wireless device, if the access point we are connecting
			to is encrypted, and we have a source key, try to generate a mangled
			key and use that (ie, generate real WEP key from a passphrase)
		- Rework device activation to fallback to other encryption methods if
			a previous one didn't work (ie, try mangling a key as a 104-bit passphrase
			first, then if that doesn't work fall back to direct hex key).
		- (nm_device_update_best_ap): fix a deadlock, and use timestamps instead of
			priority.  We now prefer the latest access point used, rather than using
			a priority scheme
		- (nm_device_do_normal_scan): make the encryption method "unknown" on access
			points we've just discovered, and merge in correct info from the global
			access point lists

2004-08-25  Seth Nickell  <seth@gnome.org>

        Patch from Matthew Garrett <mjg59@srcf.ucam.org> for adding
	Debian support.
	
	* src/Makefile.am:
	* src/backends/NetworkManagerDebian.c: (nm_system_device_run_dhcp),
	(nm_system_device_stop_dhcp), (nm_system_device_flush_routes),
	(nm_system_device_flush_addresses), (nm_system_enable_loopback),
	(nm_system_delete_default_route),
	(nm_system_kill_all_dhcp_daemons), (nm_system_update_dns),
	(nm_system_load_device_modules):

2004-08-24  Dan Willemsen <dan@willemsen.us>

	* src/NetworkManager.c
	  src/backends/NetworkManagerGentoo.c
	  src/backends/NetworkManagerRedHat.c
	  src/backends/NetworkManagerSystem.h
		- Implement preliminary Gentoo support, adding a
			nm_system_init function to the backend specification

	* configure.in
		- Distribution auto-detection, lowercase any user-fed
			distribution names

	* initscript/.cvsignore
	  initscript/Makefile.am
	  initscript/RedHat/Makefile.am
	  initscript/RedHat/NetworkManager
	  initscript/Gentoo/Makefile.am
	  initscript/Gentoo/NetworkManager
		- Refactored initscript code separately for each
			distribution

2004-08-23  Dan Williams <dcbw@redhat.com>

	* configure.in
	  src/Makefile.am
	  src/NetworkManagerDevice.c
	  src/NetworkManager.c
	  src/NetworkManagerUtils.[ch]
	  src/backends/NetworkManagerSystem.h
	  src/backends/NetworkManagerRedHat.c
	  src/backends/NetworkManagerGentoo.c
		- Refactor system-specific code into separate backends for
			each distribution

2004-08-23  Dan Willemsen <dan@willemsen.us>

	* dispatcher-daemon/NetworkManagerDispatcher.c
	  info-daemon/NetworkManagerInfo.[ch]
	  info-daemon/NetworkManagerInfoDbus.c
	  info-daemon/NetworkManagerInfoPassphraseDialog.c
	  src/NetworkManager.c
	  src/NetworkManagerAP.c
	  src/NetworkManagerAPList.c
	  src/NetworkManagerDbus.c
	  src/NetworkManagerDevice.c
	  src/NetworkManagerPolicy.c
	  src/NetworkManagerUtils.[ch]
	  src/NetworkManagerWireless.c
		- Used syslog functions for logging instead of NM_DEBUG_DISPLAY & fprintf

	* src/NetworkManager.c
		- Fixed usage wording for --no-daemon

2004-08-23  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.c
		- Update our state every second to get more responsive panel icon
		- (nmwa_update_state): remove bogus applet->pix_state = PIX_WIRED that
			was causing our marching ants status blips to never move when
			looking for a wireless network

	* src/NetworkManagerDevice.c
		- (nm_device_activation_begin): return if activation has already begun
		- (nm_device_do_normal_scan): merge WEP key and priority from the
			trusted/preferred network into the device's access point when the
			scan list is processed

2004-08-23  Dan Williams <dcbw@redhat.com>

	* initscript/NetworkManager
		- Use NMLaunchHelper rather than sleeping

	* initscript/NMLaunchHelper.c
	  Makefile.am
		- Add helper program that exits only when NM activates a device,
			or 10 seconds have passed, whichever happens first.  This
			stops the boot processes until we have a network connection,
			which NM can't do because it daemonizes and brings the connection
			up in the background.  Allows stuff like NFS to not die.

2004-08-20  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoPassphraseDialog.c
		- (nmi_passphrase_dialog_ok_clicked): when updating the wep key
			for a network, set the essid as well since it may not exist yet
		- (nmi_passphrase_dialog_init): don't star out the passphrase field,
			since WEP keys/passphrases are long and prone to entry-error

	* panel-applet/Makefile.am
	  panel-applet/wired.png
		- Add (pulled from system-config-network temporarily)

	* panel-applet/NMWirelessApplet.[ch]
		- Show wired picture when a wired connection is used
		- Rename wireless icon enums, adding WIRELESS

	* src/NetworkManagerDevice.c
		- (nm_device_activate_wireless): unset encryption before bringing
			down the card and setting the essid
		- (nm_device_activatin_worker): request a key from the user if the
			AP we are connecting to is encrypted but we don't have a key
			for it yet
		- (nm_device_set_user_key_for_network): fix missing '== 0' for a
			strcmp() that prevented a user-entered key from actually getting
			used

2004-08-16  Dan Williams <dcbw@redhat.com>

	* initscript/NetworkManager
		- Check for /sbin/ip
		- Do sysctl magic that network service does
		- sleep 4s after start to allow network time to come up [hack]

	* src/Makefile.am
	  src/NMLoadModules
		- Load all network device kernel modules (hal doesn't know devices
			are ethernet until the module is loaded, and therefore we don't know)

	* src/NetworkManager.c
		- (main): daemonize later, launch NMLoadModules to alert HAL of our
			network devices, and bring up the loopback device explicitly

	* src/NetworkManagerUtils.[ch]
		- (nm_enable_loopback): new function

2004-08-13  Dan Williams <dcbw@redhat.com>

	* configure.in
	  panel-applet/Makefile.am
		- Fix up cleanfiles and server_DATA/server_in_files

	* README
		- Update with some comments on theory of operation

	* CONTRIBUTING
	  Makefile.am
		- Add CONTRIBUTING

2004-08-12  Dan Williams <dcbw@redhat.com>

	* info-daemon/passphrase.glade
		- Set window title to " "

	* panel-applet/Makefile.am
	  panel-applet/keyring.png
		- Deliver to correct place

	* panel-applet/NMWirelessApplet.[ch]
		- Add comments
		- Remove applet->have_active_device as its no longer used
		- (nmwa_load_theme): load keyring.png too
		- (error_dialog): remove
		- (show_warning_dialog): subsume functionality of error dialog too
		- (nmwa_destroy, nmwa_new): create and dispose of an application-wide GConfClient
		- (nmwa_handle_network_choice): add to deal with user clicking on an item from
			the networks menu
		- (nmwa_menu_item_activated): GtkMenuItem "activate" signal handler
		- (nmwa_button_clicked, nmwa_setup_widgets): create and populate the menu on startup
			and when we get broadcasts of changed wireless access points only, not when the
			user clicks on the button to display the menu (too long of a wait)
		- (nmwa_add_menu_item): Make active network bold, and place a keyring icon beside
			networks that are encrypted
		- (nmwa_dispose_menu, nmwa_menu_item_data_free): dispose of the data we place on each
			menu item with g_object_set_data()

	* panel-applet/NMWirelessAppletDbus.[ch]
		- (nmwa_dbus_get_bool): add method to return boolean value from dbus message
		- (nmwa_dbus_get_active_network): add (nmwa_dbus_get_string() wrapper to get active network)
		- (nmwa_dbus_add_networks_to_menu): clean up, only show one instance of each ESSID in the menu
		- (nmwa_dbus_set_network): force NetworkManager to use a particular network for wireless cards
		- (nmwa_dbus_init, nmwa_dbus_filter): Trap network appear/disappear and device
			activation/deactivation signals and rebuild the menu when they happen

	* src/NetworkManager.c
		- (main): use new nm_spawn_process() rather than system()

	* src/NetworkManagerDbus.c
		- (nm_dbus_devices_handle_request): don't compare AP structure addresses directly, but essids
			instead.  Since we can now force best_aps to stick around, the AP structure to which
			dev->options.wireless.best_ap points to won't necessarily be in the device's device list
			if a scan has happened since the best_ap was frozen.  Also add "setNetwork" method
			to freeze the best_ap.

	* src/NetworkManagerDevice.[ch]
		- (nm_device_activation_worker): Use new nm_spawn_process() call rather than system()
		- (nm_device_*_best_ap): add freeze/unfreeze/get_frozen functions, and don't really update
			the best_ap in nm_device_update_best_ap() if the best_ap is frozen AND in the device's
			ap list

	* src/NetworkManagerUtils.[ch]
		- (nm_spawn_process): add replacement for system() usage

2004-08-11  Dan Williams <dcbw@redhat.com>

	* panel-applet/NMWirelessApplet.[ch]
		- Fix up copyright and credits to include Bastien and Eskil,
			who created the gnome-applets wireless applet, from whose
			skeleton this one was created
		- Rework nmwa_update_state()/nmwa_draw() so that state and which
			pixmap to draw is computed during nmwa_update_state()
		- Applet now shows itself all the time due to panel packing issues
			which caused the applet to previously never come back after hiding.
			When a wired device is the active device, the applet shows "not connected"

	* panel-applet/NMWirelessAppletDbus.[ch]
		- Clean up error messages and show what function they are from
		- nmwa_dbus_get_active_wireless_device()->nmwa_dbus_get_active_device()
		- Add new device type getters, and a status getter

	* src/NetworkManagerDbus.c
		- (nm_dbus_devices_handle_request): Don't return an active network unless that
			network is actually in the device's ap list
		- (nm_dbus_nm_message_handler): Fix silly mistake returning status

	* src/NetworkManagerDevice.c
		- (nm_device_update_best_ap): If the best AP is NULL, clear out the ESSID of the
			card

	* test/nmclienttest.c
		- Report status of NetworkManager too

2004-08-11  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c:
		- (main): clean up Seth's code style

	* info-daemon/NetworkManagerInfoDbus.c:
		- Use the more aptly-named path/service/interface constants from NetworkManager
		- Don't return empty strings ("") as object paths ever, instead return errors

	* panel-applet/NMWirelessApplet.c:
		- Clean up Seth's code style

	* src/NetworkManager.[ch]
		- (nm_remove_device_from_list): remove anything having to do with pending_device
		- (main, nm_print_usage): change --daemon=[yes|no] -> --no-daemon

	* src/NetworkManagerAPList.[ch]
		- Move Iter struct right above the iter functions to preserve opacity
		- (nm_ap_list_remove_ap): implement
		- (nm_ap_list_update_network): deal with errors returned from nm_dbus_get_network_priority(),
			remove AP if NetworkManagerInfo doesn't know anything about it
		- (nm_ap_list_diff): user NMAPList iterators
		- (nm_ap_list_print_members): implement debugging function

	* src/NetworkManagerDbus.[ch]
		- (nm_dbus_nm_get_active_device): remove anything to do with pending_device
		- (nm_dbus_get_user_key_for_network): remove DBusPendingCall stuff (unused),
			and move the actual key setting stuff into NetworkManagerDevice.c
		- (nm_dbus_get_network_priority): return -1 now on errors
		- (nm_dbus_nmi_filter): fix strcmp() error that caused PreferredNetworkUpdate signals to
			get lost, and force the active device to update its "best" ap when AP lists change
		- (nm_dbus_nm_message_handler): Update conditions for returning "connecting" for a "status"
			method call due to pending_device member removal

	* src/NetworkManagerDevice.[ch]
		- Move NMDevice structure to the top
		- Add a wireless scan mutex and a best_ap mutex to the Wireless Options structure
		- Remove Pending Action stuff from everywhere
		- (nm_device_activation_*): We now "begin" activation and start a thread to do the
			activation for us.  This thread blocks until all conditions for activation have
			been met (ie for wireless devices, we need a valid WEP key and a "best" ap), and
			then setup up the interface and runs dhclient.  We have to do this because there
			is no guaruntee how long dhclient takes, and while we are blocking on it, we cannot
			run our main loop and respond to dbus method calls or HAL device removals/inserts
		- (nm_device_set_user_key_for_network): Move logic here from NetworkManagerDbus.c so we
			can tell nm_device_activation_worker() that we've got a key
		- (nm_device_*_best_ap): lock access to best_ap member of Wireless Options structure
		- (nm_device_get_path_for_ap): dumb it down so the list doesn't lock against itself when
			diffing (AP appear/disappear signal functions make sure the AP is actually in the device's list)
		- (nm_device_update_best_ap): move logic from nm_wireless_is_ap_better() here

	* src/NetworkManagerPolicy.c
		- Remove anything to do with pending_device
		- Adjust device activation to deal with activation-in-worker-thread

	* src/NetworkManagerUtils.c
		- Clean up locking debugging a bit

	* src/NetworkManagerWireless.[ch]
		- (nm_wireless_is_ap_better): remove, stick logic in nm_device_update_best_ap().  This function
			was badly named and is better as a device function

	* panel-applet/.cvsignore: add

2004-08-09  Seth Nickell  <seth@gnome.org>

	* panel-applet/NMWirelessApplet.c: (nmwa_timeout_handler),
	(nmwa_button_clicked), (nmwa_populate_menu), (nmwa_setup_widgets),
	(nmwa_new):
	* src/NetworkManagerDbus.c: (nm_dbus_nmi_filter):

	Don't load the menus until clicked on (also removes a call outside
	normal code paths at first load).

	Hide applet when NM is not present.
	
	Improve printf debugging stuff.
	
2004-08-09  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c:
		- Covert uses of dbus_message_iter_* over to dbus_message_get_args
		- Use constants for NetworkManager interface, service, and path

2004-08-09  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDbus.c:
		- (nm_dbus_nm_get_active_device, nm_dbus_nm_get_devices): Never return an empty object path,
			instead return an error message
		- (nm_dbus_devices_handle_request): Return error when getActiveNetwork/getNetworks is called
			on a wired device.  Also never return an empty object path, instead return an error message

2004-08-06  Seth Nickell  <seth@gnome.org>

	* panel-applet/NMWirelessApplet.c: (nmwa_new):

	Check the error code when getting a connection.
	
	* panel-applet/NMWirelessAppletDbus.c: (nmwa_dbus_init):

	Check if the NM service exists when initializing (rather than
	assuming it does not).
	
	* src/NetworkManagerDbus.c: (nm_dbus_init):

	Don't acquire the well-known service name until we have
	registered object/path handlers and can actually receive
	calls.
	
2004-08-06  Dan Williams <dcbw@redhat.com>

	* panel-applet/*
		- Add panel applet

	* src/NetworkManagerPolicy.c
	  src/NetworkManager.c
		- Get access point lists from NetworkManagerInfo on-demand,
			and look for ServiceCreate/ServiceDeleted signals to see when
			we should query NMI for lists
	* src/NetworkManagerAPList.c
		- Make sure to init the list's mutex
		- Convert traversals of the list over to the list iter functions

	* src/NetworkManagerDbus.[ch]
		- Use more aptly-named path/service/interface constants
		- Treat both active and pending devices the same for "getActiveDevice"
		- Add a "status" method returning "connected", "connecting", or "disconnected"

	* src/NetworkManagerDevice.c
		- Honor "ignored" network list when picking best ap to use

2004-08-06  Seth Nickell  <seth@gnome.org>

	* aclocal.m4:

	Autogenerated, remove from CVS.
	
	* autogen.sh:

	Don't hardcode automake version.
	
	* configure.in:
	* info-daemon/Makefile.am:
	* info-daemon/NetworkManagerInfo.c: (main):

	Use GnomeProgram et al. for doing session management.
	Use popt stuff for argument parsing rather than doing
	it manugally.
	
2004-08-05  Dan Williams <dcbw@redhat.com>

	* test/nminfotest.c
		- Update to new NMI dbus API, check different network types

	* info-daemon/NetworkManagerInfoDbus.c
		- Update to new NM dbus API, ie network type sent in query message

2004-08-05  Dan Williams <dcbw@redhat.com>

	* An assload of changes

2004-08-02  Dan Williams <dcbw@redhat.com>

	* TODO
		- new task: proper logging support

	* info-daemon/NetworkManagerInfo.c
		- Correct spelling of "canceled"
		- Correct casting of objects for g_signal_connect()

	* info-daemon/NetworkManagerInfoDbus.c
		- Add defines for NetworkManager namespace and object path, and use them
		- Add filter function to trap new signals from NetworkManager:
			WirelessNetworkAppeared, WirelessNetworkDisappeared

	* info-daemon/passphrase.glade
		- Change name of "ok" button to "Login to Network..."
		- Mark invisible

	* src/NetworkManager.c
		- Code and debug message cleanups
		- Rename "nm_add_current_devices"->"nm_add_initial_devices"
		- (nm_add_initial_devices) Check returned string array of devices
			and don't try to add devices if array is NULL
		- (main) Initialize libhal a bit later, make code a bit clearer

	* src/NetworkManagerAP.[ch]
		- New accessor and data member "matched": used to speed up AP list
			diffing
		- New accessor and data member "enc_method": will be used during key
			fallback to cache which passphrase->key conversion actually works
			so we don't have to do it every time

	* src/NetworkManagerAPList.[ch]
		- (nm_ap_list_find_ap_in_list) New: find an AP by essid in an AP list
		- (nm_ap_list_diff) New: given two lists of access points, find the differences
			between them, and send WirelessNetworkAppeared/Disappeared signals over
			dbus in response to those differences

	* src/NetworkManagerDbus.[ch]
		- (nm_dbus_get_object_path_from_ap) New: given a device and an access point,
			make an object path for that access point (NOTE that we don't yet check to
			make sure that access point is actually in the device's AP list yet)
		- (nm_dbus_get_ap_from_object_path) Renamed from nm_dbus_get_network_from_object_path
		- (nm_dbus_signal_wireless_network_appeared, nm_dbus_signal_wireless_network_disappeared)
			New: signal appearance/disappearance of wireless networks
		- (nm_dbus_set_user_key_for_network) Mark the network/ap as invalid if the user cancelled
			key entry

	* src/NetworkManagerDevice.[ch]
		- (nm_device_ap_list_clear) Use nm_ap_list_free rather than doing it ourselves
		- (nm_device_ap_list_get) New: return the AP list (static function)
		- (nm_device_do_normal_scan) Destroy old AP list later, so that we can diff the
			new one resulting from the scan with the old one

	* src/NetworkManagerWireless.c
		- (nm_wireless_is_most_prefered_ap) "invalid" access points cannot be "best" access points

	* test/nminfotest.c
		- #define object paths and namespaces and use the #defines rather than static strings
		- Test out user-key functionality of NetworkManagerInfo too

2004-07-29  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfoDbus.c
	  src/NetworkManagerDbus.c
		- Update to current DBus (ie don't use decomposed paths when registering
			object paths/fallbacks)

2004-07-27  Dan Williams <dcbw@redhat.com>

	* Remove various Makefile.in files

	* TODO
		- Add some more items

	* configure.in
		- Add checks for OpenSSL/md5 headers and libs

	* src/Makefile.am
		- Use OpenSSL CFLAGS

	* src/NetworkManagerAP.[ch]
		- Remove 'stamp' functions, replace with 'invalid' functions
			to support user cancelling WEP key entry

	* src/NetworkManagerDbus.c
		- Remove 'stamp' return functions
		- Treat returned user key as a passphrase and convert to a WEP key,
			but don't actually use the WEP key yet.  We use the returned user
			key as a hexadecimal WEP key until we can figure out a UI for
			passphrase-vs-hex key

	* src/NetworkManagerWireless.[ch]
		- Add passphrase-to-128bit-key function

2004-07-27  Dan Williams <dcbw@redhat.com>

	* TODO
		- Add a couple of items

2004-07-27  Dan Williams <dcbw@redhat.com>

	* info-daemon/NetworkManagerInfo.c
		- Update allowed network's GConf key when user enters a WEP key explicitly

	* info-daemon/NetworkManagerDbus.c
		- Fix some comments
		- nmi_dbus_get_allowed_networks(): kill warning

2004-07-27  Dan Williams <dcbw@redhat.com>

	* initscript/Makefile.in
		- Remove

	* initscript/Makefile.am
		- Add correct rules to install the init.d initscript

	* info-daemon/NetworkManagerInfoDbus.c
		- Remove debug fprintf

	* src/NetworkManagerDbus.[ch]
		- Remove debug fprintfs
		- Add macros for NetworkManagerInfo object path/namespace
		- Use said macros instead of constant strings

2004-07-27  Dan Williams <dcbw@redhat.com>

	* initscript/.cvsignore
		- Add

	* info-daemon/Makefile.am
		- Install .glade files and keyring.png
		- Fix stupid omission of a \ that caused half the flags not to be
			passed to gcc

	* info-daemon/NetworkManagerInfo.c
		- gtk_signal_connect->g_signal_connect
		- Alert NetworkManagerInfo to new glade file location

2004-07-27  Dan Williams <dcbw@redhat.com>

	* test/nmclienttest.c
	  test/nminfotest.c
		- Add missing <dbus/dbus.h> headers
		- Add GPL message at top

2004-07-27  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerAPList.[ch]
	  src/Makefile.am
		- Add.  Deal with allowed network list additions, deletions, and updates

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Add missing <dbus/dbus.h> header

	* info-daemon/NetworkManagerInfo.[ch]
		- Add missing <dbus/dbus.h> header
		- Implement the GConf notify callback to signal NetworkManager of an allowed
			network change
		- Better error checking

	* info-daemon/NetworkManagerInfoDbus.[ch]
		- Add missing <dbus/dbus.h> header
		- Convert to using dbus_message_append_args/dbus_message_get_args
		- Implement nmi_dbus_signal_update_allowed_network() to signal NetworkManager
			that an allowed network changed.  We don't want to signal on individual
			keys _inside_ an allowed network really, just want NM to query the info
			daemon for updated info on all keys.
		- Better error checking

	* src/NetworkManager.[ch]
		- Add missing <dbus/dbus.h> header
		- Move allowed_ap_list free functions to NetworkManagerAPList.[ch]
		- Zero out NMData structure on free
		- No longer use a thread for allowed_ap_list updating, instead its now done
			through dbus queries against NetworkManagerInfo
		- Populate allowed_ap_list initially before adding existing network devices
			to the device list, so wireless devices can get their "best" AP

	* src/NetworkManagerDbus.[ch]
		- Convert to using dbus_message_append_args/dbus_message_get_args
		- Better error checking
		- Implement Allowed Network info functions to request allowed network
			info from NetworkManagerInfo
		- Implement the filter function to process signals from NetworkManagerInfo
			about changing allowed networks

	* src/NetworkManagerDevice.c
		- Fix file descriptor leak in nm_device_update_ip4_address()

2004-07-27  Dan Williams <dcbw@redhat.com>

	* .cvsignore
	  src/.cvsignore
	  test/.cvsignore
	  dispatcher-daemon/.cvsignore
	  info-daemon/.cvsignore
		- Add .cvsignore files to reduce noise when diffing

2004-07-24  Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.[ch]
	  src/NetworkManagerDbus.[ch]
	  src/NetworkManagerDevice.[ch]
	  src/NetworkManagerPolicy.c
	  src/NetworkManagerWireless.[ch]
		- Add many more g_return_if_fail()/g_return_val_if_fail() checks
		- Pass the NMData application data structure through all calls
			that need it so we can get rid of nm_get_global_data()
		- Change deallocation of the allowed_ap_list GSList in preparation
			for not completely clearing it every time we get an update,
			but instead getting incremental updates via GConf/dbus

2004-07-22  Dan Williams <dcbw@redhat.com>

	* configure.in
		- Add checks for GConf libs & headers & flags

	* info-daemon/Makefile.am
		- Add GConf flags & libs to compile/link stages of NetworkManagerInfo

	* info-daemon/NetworkManagerInfo.[ch]
		- Don't use gquarks for data storage, just use normal data storage
		- Add gconf bits to watch /system/networking/wireless/allowed_networks

	* info-daemon/NetworkManagerDbus.[ch]
		- Add method call for getting allowed networks
		- Add method calls for getting an allowed network's essid, priority, and key
		- Hook the method calls up to GConf
		- Split user key dialog code into separate function (nmi_dbus_get_key_for_network)
		- nmi_dbus_nmi_message_handler(): make sure to unref the reply message after sending
		
	* src/NetworkManagerDbus.[ch]
		- Switch for enumeration of networks to using essid instead

	* test/Makefile.am
	  test/nminfotest.c
	  	- Add test program for NetworkManagerInfo

2004-07-19  Dan Williams <dcbw@redhat.com>

	* src/NetworkManagerDbus.c
		- Switch from indexed device paths to names.  Less code, more efficient.
			ie "/org/freedesktop/NetworkManager/0" -> "/org/freedesktop/NetworkManager/eth0"

2004-07-19  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- (nm_dbus_filter): Remove obsolete response to NeedKeyForNetwork signal

2004-07-19  Dan Williams <dcbw@redhat.com>

	* Makefile.am
		- Add info-daemon directory

	* configure.in
		- Check for glade libs and headers
		- Add info-daemon directory

	* src/NetworkManagerAP.c
		- nm_ap_new_from_ap(): Fix bug that resulted in an APs encryption status not getting
			copied over to the new AP.

	* src/NetworkManagerDbus.c
	  src/NetworkManagerDbus.h
		- Deal with nm_device_ap_list_get_ap()->nm_device_ap_list_get_ap_by_index() change
		- Remove nm_dbus_signal_need_key_for_network()
		- Add disabled code for asynchronous user wep key callbacks
		- Add functions for getting, setting, and cancelling user key operations
		- Remove "setKeyForNetwork" device dbus method call, its on NetworkManager object instead
		- Add "setKeyForNetwork" dbus method call on NetworkManager object

	* src/NetworkManagerDevice.c
	  src/NetworkManagerDevice.h
		- nm_device_update_link_active(): revert changes for wireless link detection, the WEP-key-is-wrong
			logic is in device activation now
		- nm_device_activate(): for wireless devices, if we can't associate with access point (perhaps
			key is wrong) trigger get-user-key pending action
		- Implement get-user-key pending action stuff, tie to dbus messages
		- Rename nm_device_ap_list_get_ap() -> nm_device_ap_list_get_ap_by_index()
		- Add nm_device_ap_list_get_ap_by_essid()
		- Instead of copying "best" access points, ref them instead so that the key we set
			sticks around

	* src/NetworkManagerPolicy.c
		- Deal with wrong WEP key, but right access point (and if so, return link_active = TRUE)
		- Don't cancel pending actions on a device if its the same device as last iteration
		- Only promote pending_device->active_device if activation was successfull

	* src/Makefile.am
		- Rename nmclienttest->nmtest

	* info-daemon/Makefile.am
	  info-daemon/NetworkManagerInfo.c
	  info-daemon/NetworkManagerInfo.h
	  info-daemon/NetworkManagerInfoDbus.c
	  info-daemon/NetworkManagerInfoDbus.h
	  info-daemon/passphrase.glade
	  info-daemon/NetworkManagerInfo.conf
	  info-daemon/keyring.png
	  	- Import sources for info-daemon, which pops up dialog for passphrase/key when
	  		NetworkManager asks for it, and also will (soon) provide "allowed" access point
	  		lists to NetworkManager by proxying user's GConf
	  

2004-07-15  Dan Williams <dcbw@redhat.com>

	* src/Makefile.am
		- Turn on warnings

	* src/NetworkManager.c
		- nm_create_device_and_add_to_list(): call nm_device_deactivate() rather
			that doing the deactivation ourselves
		- Cancel an pending actions on a device if its being removed
		- Break up link state checking a bit, make non-active wireless cards
			deactivated to save power
		- Remove unused variables

	* src/NetworkManager.h
		- Add support for "pending" device

	* src/NetworkManagerAP.h
	  src/NetworkManagerAP.c
		- Add support for determining whether and AP has encryption enabled or not
		- AP address is now "struct ether_addr" rather than a string

	* src/NetworkManagerDbus.h
	  src/NetworkManagerDbus.c
		- Add signal NeedKeyForNetwork, method SetKeyForNetwork (testing only)
		- Changes for AP address from struct ether_addr->string

	* src/NetworkManagerDevice.h
	  src/NetworkManagerDevice.c
		- Remove unused variables, fix warnings
		- Add support for Pending Actions (things that block a device from being "active"
			until they are completed).
		- First pending action:  Get a WEP key from the user
		- Add nm_device_is_wire[d|less](), rename nm_device_is_wireless()
		- Clean up explicit testing of dev->iface_type to use nm_device_is_wireless()
		- Update wireless link checking to try to determine if the AP we are associated
			with is correct, but the WEP key we are using is just wrong.  If its wrong,
			trigger the GetUserKey pending action on the device
		- If dhclient can't get an IP address, it brings the device down.  Bring it back
			up in that case, otherwise we can't scan or link-check on it
		- Add IP address change notifications at appropriate points (still needs some work)
		- Add nm_device_need_ap_switch(), checks whether we need to switch access points or not

	* src/NetworkManagerPolicy.h
	  src/NetworkManagerPolicy.c
		- Split out "best" access point determiniation into separate function
		- Make device activation 2-stage:  first the device is pending, then
			in the next iteration through it becomes "active" unless it has
			pending actions

	* src/NetworkManagerUtils.h
	  src/NetworkManagerUtils.c
		- Clean up unused variables and warnings
		- Wrap our debug macros in {} to prevent possible confusion

	* src/NetworkManagerWireless.c
		- Forgot to return current best priority, which lead to last available AP always
			being chosen no matter what its priority was.  Corrected.

2004-07-15  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/Makefile.am
		- Turn on warnings

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Remove unused variables due to warnings
		- Fix some comments
		- Print message on receipt of NeedKeyForNetwork signal (testing only)

2004-07-06  Dan Williams <dcbw@redhat.com>

	* src/NetworkManager.c
		- Add IPv4 address update for active device during link state check
		- Don't allow wireless cards to be powered up when they are not the
			active device

	* src/NetworkManagerDbus.c
	  src/NetworkManagerDbus.h
		- Add DBUS IPv4 address change signal
		- Add DBUS IPv4 address get method for devices

	* src/NetworkManagerDevice.c
		- Make setting the WEP key actually work
		- Move IP address get/set/update stuff here, per-device
		- Power down/bring down wireless device when deactivated
		- For scanning wireless devices, if first scan returned ENODATA, try again

	* src/NetworkManagerPolicy.c
		- Only set the WEP key for an allowed access point if there is one.
			We were setting it to be blank if one wasn't specified.

	* src/NetworkManagerUtils.h
	  src/NetworkManagerUtils.c
		- Move the IP address stuff to NetworkManagerDevice.c

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Add device IPv4 address change notification stuff

2004-07-05  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- A bit more descriptive state message
		- Don't segfault when reading directory

	* src/NetworkManager.h
		- Remove NMData desired_ap member, its now
			per-device rather than global

	* src/NetworkManager.c
		- Remove references to desired_ap
		- Move the allowed AP list refresh stuff into a thread

	* src/NetworkManagerDevice.c
	  src/NetworkManagerDevice.h
		- Each wireless device now has a "best ap"
		- Make device activate/deactivate functions per-device
		- Make wireless scanning per-device
		- Add IPv4 address discover functions, stub IPv6 ones
		- Move ethernet address validation functions to NetworkManagerUtils.c
		- Add wireless access point accessor function
		- Get/Set functions for "best ap"

	* src/NetworkManagerPolicy.c
		- Move activate/deactivate stuff into NetworkManagerDevice.c, per-device
		- Deal with per-device "best ap" rather than data->desired_apa
		- Implement allowed access point worker thread
		- Add nm_policy_essid_is_allowed() function

	* src/NetworkManagerUtils.c
	  src/NetworkManagerUtils.h
	  	- Add nm_ethernet_address_is_valid() function
		- Add IPv4/IPv6 address get functions

	* src/NetworkManagerWireless.c
	  src/NetworkManagerWireless.h
		- Move scanning stuff into NetworkManagerDevice.c, per-device

2004-06-29  Dan Williams <dcbw@redhat.com>

	* dispatcher-daemon/NetworkManagerDispatcher.c
		- Implement script callout functionality

2004-06-24  Dan Williams <dcbw@redhat.com>

	* NetworkManager.c
	    - Spacing cleanups
	    - Flush device routes and ip addresses when added to the device list

	* NetworkManagerDbus.c
	    - Spacing cleanups
	    - Add missing returns in the two signal functions
	
	* NetworkManagerPolicy.c
	    - Spacing and variable cleanups

2004-06-24  Dan Williams <dcbw@redhat.com>

	* Makefile.am
	  Makefile.in
	  configure.in
	  dispatcher-daemon/Makefile.am
	  dispatcher-daemon/Makefile.in
	  dispatcher-daemon/NetworkManagerDispatcher.c
	    - Add a daemon that receives signals from NetworkManager
			and will (eventually) call scripts in /etc/somewhere
			when devices go up or down.
	
	* NetworkManager.c
	    - Spacing cleanups
	    - Flush device routes and ip addresses when added to the device list

	* NetworkManagerDbus.c
	    - Spacing cleanups
	    - Add missing returns in the two signal functions
	
	* NetworkManagerPolicy.c
	    - Spacing and variable cleanups
	    - Rename nm_policy_switch_interface->nm_policy_switch_device
	    - nm_policy_switch_device():
				Use kill (pid) instead of system ("kill <pid>")
	    - nm_state_modification_monitor():
				Add wireless essid to output of debug statements
				Correct typo in device compare to switch or not (should be !=)
				Don't sleep after sending "no longer active" signal, was useless

2004-06-24  Dan Williams <dcbw@redhat.com>

	* Initial import
